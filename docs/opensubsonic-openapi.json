{
    "openapi": "3.0.0",
    "info": {
        "title": "OpenSubsonic API",
        "version": "1.16.1"
    },
    "servers": [
        {
            "url": "https://api.server.test/v1"
        }
    ],
    "security": [
        {
            "apiKeyAuth": [],
            "protocolVersion": [],
            "clientName": []
        },
        {
            "username": [],
            "legacyPassword": [],
            "protocolVersion": [],
            "clientName": []
        },
        {
            "username": [],
            "token": [],
            "salt": [],
            "protocolVersion": [],
            "clientName": []
        }
    ],
    "paths": {
        "/rest/addChatMessage": {
            "get": {
                "summary": "Adds a message to the chat log.",
                "description": "Adds a message to the chat log.",
                "operationId": "addChatMessage",
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "name": "message",
                        "in": "query",
                        "description": "The chat message.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "addChatMessage",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/addchatmessage/"
                }
            }
        },
        "/rest/changePassword": {
            "get": {
                "summary": "Changes the password of an existing user on the server.",
                "description": "Changes the password of an existing user on the server, using the following parameters. You can only change your own password unless you have admin privileges.",
                "tags": [
                    "User Management"
                ],
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the user which should change its password.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The new password of the new user, either in clear text of hex-encoded (see above).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "changePassword",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/changepassword/"
                }
            }
        },
        "/rest/createBookmark": {
            "get": {
                "summary": "Creates or updates a bookmark.",
                "description": "Creates or updates a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",
                "tags": [
                    "Bookmarks"
                ],
                "operationId": "createBookmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the media file to bookmark. If a bookmark already exists for this file it will be overwritten.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "The position (in milliseconds) within the media file.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "A user-defined comment.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "createBookmark",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createbookmark/"
                }
            }
        },
        "/rest/createInternetRadioStation": {
            "get": {
                "summary": "Adds a new internet radio station.",
                "description": "Adds a new internet radio station. Only users with admin privileges are allowed to call this method.",
                "operationId": "createInternetRadioStation",
                "tags": [
                    "Internet Radio"
                ],
                "parameters": [
                    {
                        "name": "streamUrl",
                        "in": "query",
                        "description": "The stream URL for the station.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The station name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "homepageUrl",
                        "in": "query",
                        "description": "The home page URL for the station.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "createInternetRadioStation",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createinternetradiostation/"
                }
            }
        },
        "/rest/createPlaylist": {
            "get": {
                "summary": "Creates (or updates) a playlist.",
                "description": "Creates (or updates) a playlist.",
                "operationId": "createPlaylist",
                "tags": [
                    "Playlists"
                ],
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "query",
                        "description": "The playlist ID. Required if updating an existing playlist.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The human-readable name of the playlist. Required if creating a new playlist.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "songId",
                        "in": "query",
                        "description": "ID of a song in the playlist. Use one `songId` parameter for each song in the playlist.",
                        "explode": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePlaylistResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createPlaylist",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createplaylist/"
                }
            }
        },
        "/rest/createPodcastChannel": {
            "get": {
                "summary": "Adds a new Podcast channel.",
                "description": "Adds a new Podcast channel. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "createPodcastChannel",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "The URL of the Podcast to add.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "createPodcastChannel",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createpodcastchannel/"
                }
            }
        },
        "/rest/createShare": {
            "get": {
                "summary": "Creates a public URL that can be used by anyone to stream music or video from the server.",
                "description": "Creates a public URL that can be used by anyone to stream music or video from the server. The URL is short and suitable for posting on Facebook, Twitter etc. Note: The user must be authorized to share (see Settings > Users > User is allowed to share files with anyone). Since 1.6.0.",
                "operationId": "createShare",
                "tags": [
                    "Sharing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of a song, album or video to share. Use one id parameter for each entry to share.",
                        "explode": true,
                        "required": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "A user-defined description that will be displayed to people visiting the shared media.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "The time at which the share expires. Given as milliseconds since 1970.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSharesResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createShare",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createshare/"
                }
            }
        },
        "/rest/createUser": {
            "get": {
                "summary": "Creates a new user on the server.",
                "description": "Creates a new user on the server.",
                "operationId": "createUser",
                "tags": [
                    "User Management"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the new user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password of the new user, either in clear text of hex-encoded (see above).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address of the new user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ldapAuthenticated",
                        "in": "query",
                        "description": "Whether the user is authenticated in LDAP.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "adminRole",
                        "in": "query",
                        "description": "Whether the user is administrator.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "settingsRole",
                        "in": "query",
                        "description": "Whether the user is allowed to change personal settings and password.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "streamRole",
                        "in": "query",
                        "description": "Whether the user is allowed to play files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "jukeboxRole",
                        "in": "query",
                        "description": "Whether the user is allowed to play files in jukebox mode.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "downloadRole",
                        "in": "query",
                        "description": "Whether the user is allowed to download files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "uploadRole",
                        "in": "query",
                        "description": "Whether the user is allowed to upload files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "playlistRole",
                        "in": "query",
                        "description": "Whether the user is allowed to create and delete playlists. Since 1.8.0, changing this role has no effect.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "coverArtRole",
                        "in": "query",
                        "description": "Whether the user is allowed to change cover art and tags.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "commentRole",
                        "in": "query",
                        "description": "Whether the user is allowed to create and edit comments and ratings.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "podcastRole",
                        "in": "query",
                        "description": "Whether the user is allowed to administrate Podcasts.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "shareRole",
                        "in": "query",
                        "description": "(Since 1.8.0) Whether the user is allowed to share files with anyone.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "videoConversionRole",
                        "in": "query",
                        "description": "(Since 1.15.0) Whether the user is allowed to start video conversions.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.12.0) IDs of the music folders the user is allowed access to. Include the parameter once for each folder. Default all folders.",
                        "required": false,
                        "explode": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "createUser",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createuser/"
                }
            }
        },
        "/rest/deleteBookmark": {
            "get": {
                "summary": "Deletes a bookmark.",
                "description": "Deletes a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",
                "operationId": "deleteBookmark",
                "tags": [
                    "Bookmarks"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the media file for which to delete the bookmark. Other users\u2019 bookmarks are not affected.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deleteBookmark",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deletebookmark/"
                }
            }
        },
        "/rest/deleteInternetRadioStation": {
            "get": {
                "summary": "Deletes an existing internet radio station.",
                "description": "Deletes an existing internet radio station. Only users with admin privileges are allowed to call this method.",
                "operationId": "deleteInternetRadioStation",
                "tags": [
                    "Internet Radio"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID for the station.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deleteInternetRadioStation",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deleteinternetradiostation/"
                }
            }
        },
        "/rest/deletePlaylist": {
            "get": {
                "summary": "Deletes a saved playlist.",
                "description": "Deletes a saved playlist.",
                "operationId": "deletePlaylist",
                "tags": [
                    "Playlists"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the playlist to delete, as obtained by `getPlaylists`.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deletePlaylist",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deleteplaylist/"
                }
            }
        },
        "/rest/deletePodcastChannel": {
            "get": {
                "summary": "Deletes a Podcast channel.",
                "description": "Deletes a Podcast channel. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "deletePodcastChannel",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the Podcast channel to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deletePodcastChannel",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deletepodcastchannel/"
                }
            }
        },
        "/rest/deletePodcastEpisode": {
            "get": {
                "summary": "Deletes a Podcast episode.",
                "description": "Deletes a Podcast episode. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "deletePodcastEpisode",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the Podcast episode to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deletePodcastEpisode",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deletepodcastepisode/"
                }
            }
        },
        "/rest/deleteShare": {
            "get": {
                "summary": "Deletes an existing share.",
                "description": "Deletes an existing share",
                "operationId": "deleteShare",
                "tags": [
                    "Sharing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the share to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deleteShare",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deleteshare/"
                }
            }
        },
        "/rest/deleteUser": {
            "get": {
                "summary": "Deletes an existing user on the server.",
                "description": "Deletes an existing user on the server.",
                "operationId": "deleteUser",
                "tags": [
                    "User Management"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the user to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deleteUser",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deleteuser/"
                }
            }
        },
        "/rest/download": {
            "get": {
                "summary": "Downloads a given media file.",
                "description": "Downloads a given media file. Similar to stream, but this method returns the original media data without transcoding or downsampling.",
                "operationId": "download",
                "tags": [
                    "Media Retrieval"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A string which uniquely identifies the file to stream. Obtained by calls to getMusicDirectory.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/BinaryResponse"
                    }
                }
            }
        },
        "/rest/downloadPodcastEpisode": {
            "get": {
                "summary": "Request the server to start downloading a given Podcast episode.",
                "description": "Request the server to start downloading a given Podcast episode. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "downloadPodcastEpisode",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the Podcast episode to download",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "downloadPodcastEpisode",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/downloadpodcastepisode/"
                }
            }
        },
        "/rest/getAlbum": {
            "get": {
                "summary": "Returns details for an album.",
                "description": "Returns details for an album, including a list of songs. This method organizes music according to ID3 tags.",
                "operationId": "getAlbum",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The album ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbum",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbum/"
                }
            }
        },
        "/rest/getAlbumInfo": {
            "get": {
                "summary": "Returns album info.",
                "description": "Returns album notes, image URLs etc, using data from last.fm.",
                "operationId": "getAlbumInfo",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The album ID or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumInfoResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbumInfo",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbuminfo/"
                }
            }
        },
        "/rest/getAlbumInfo2": {
            "get": {
                "summary": "Returns album info (v2).",
                "description": "Similar to getAlbumInfo, but organizes music according to ID3 tags.",
                "operationId": "getAlbumInfo2",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The album ID or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumInfoResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbumInfo2",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbuminfo2/"
                }
            }
        },
        "/rest/getAlbumList": {
            "get": {
                "summary": "Returns a list of random, newest, highest rated etc. albums.",
                "description": "Returns a list of random, newest, highest rated etc. albums. Similar to the album lists on the home page of the Subsonic web interface.",
                "operationId": "getAlbumList",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/AlbumListType"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The number of albums to return. Max 500.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 500
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The list offset. Useful if you for example want to page through the list of newest albums.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "description": "Required if `type=='byYear'`. The first year in the range. If `fromYear` > `toYear` a reverse chronological list is returned.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "description": "Required if `type=='byYear'`. The last year in the range.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "genre",
                        "in": "query",
                        "description": "Required if `type=='byGenre'`. The name of the genre, e.g., “Rock”.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.11.0) Only return albums in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumListResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbumList",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbumlist/"
                }
            }
        },
        "/rest/getAlbumList2": {
            "get": {
                "summary": "Returns a list of random, newest, highest rated etc. albums (v2).",
                "description": "Similar to `getAlbumList`, but organizes music according to ID3 tags.",
                "operationId": "getAlbumList2",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/AlbumListType"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The number of albums to return. Max 500.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 500
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The list offset. Useful if you for example want to page through the list of newest albums.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "description": "Required if `type=='byYear'`. The first year in the range. If `fromYear` > `toYear` a reverse chronological list is returned.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "description": "Required if `type=='byYear'`. The last year in the range.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "genre",
                        "in": "query",
                        "description": "Required if `type=='byGenre'`. The name of the genre, e.g., “Rock”.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.11.0) Only return albums in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumList2Response"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbumList2",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbumlist2/"
                }
            }
        },
        "/rest/getArtist": {
            "get": {
                "summary": "Returns details for an artist.",
                "description": "Returns details for an artist, including a list of albums. This method organizes music according to ID3 tags.",
                "operationId": "getArtist",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The artist ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetArtistResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getArtist",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartist/"
                }
            }
        },
        "/rest/getArtistInfo": {
            "get": {
                "summary": "Returns artist info.",
                "description": "Returns artist info with biography, image URLs and similar artists, using data from last.fm.",
                "operationId": "getArtistInfo",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The artist, album or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Max number of similar artists to return.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "includeNotPresent",
                        "in": "query",
                        "description": "Whether to return artists that are not present in the media library.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetArtistInfoResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getArtistInfo",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartistinfo/"
                }
            }
        },
        "/rest/getArtistInfo2": {
            "get": {
                "summary": "Returns artist info (v2).",
                "description": "Similar to `getArtistInfo`, but organizes music according to ID3 tags.",
                "operationId": "getArtistInfo2",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The artist, album or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Max number of similar artists to return.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "includeNotPresent",
                        "in": "query",
                        "description": "Whether to return artists that are not present in the media library.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetArtistInfo2Response"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getArtistInfo2",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartistinfo2/"
                }
            }
        },
        "/rest/getArtists": {
            "get": {
                "summary": "Returns all artists.",
                "description": "Similar to `getIndexes`, but organizes music according to ID3 tags.",
                "operationId": "getArtists",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "If specified, only return artists in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetArtistsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getArtists",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartists/"
                }
            }
        },
        "/rest/getAvatar": {
            "get": {
                "summary": "Returns the avatar (personal image) for a user.",
                "description": "Returns the avatar (personal image) for a user.",
                "operationId": "getAvatar",
                "tags": [
                    "Media Retrieval"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/responses/BinaryResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAvatar",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getavatar/"
                }
            }
        },
        "/rest/getBookmarks": {
            "get": {
                "summary": "Returns all bookmarks for this user.",
                "description": "Returns all bookmarks for this user. A bookmark is a position within a certain media file.",
                "operationId": "getBookmarks",
                "tags": [
                    "Bookmarks"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBookmarksResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getBookmarks",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getbookmarks/"
                }
            }
        },
        "/rest/getCaptions": {
            "get": {
                "summary": "Returns captions (subtitles) for a video.",
                "description": "Returns captions (subtitles) for a video. Use `getVideoInfo` to get a list of available captions.",
                "operationId": "getCaptions",
                "tags": [
                    "Media Retrieval"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the video.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Preferred captions format (“srt” or “vtt”).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "srt",
                                "vtt"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the raw video captions.",
                        "content": {
                            "application/binary": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getCaptions",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getcaptions/"
                }
            }
        },
        "/rest/getChatMessages": {
            "get": {
                "summary": "Returns the current visible (non-expired) chat messages.",
                "description": "Returns the current visible (non-expired) chat messages.",
                "operationId": "getChatMessages",
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetChatMessagesResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getChatMessages",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getchatmessages/"
                }
            }
        },
        "/rest/getCoverArt": {
            "get": {
                "summary": "Returns a cover art image.",
                "description": "Returns a cover art image.",
                "operationId": "getCoverArt",
                "tags": [
                    "Media Retrieval"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The coverArt ID. Returned by most entities likes `Child` or `AlbumID3`",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "If specified, scale image to this size.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/BinaryResponse"
                    }
                },
                "externalDocs": {
                    "description": "getCoverArt",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getcoverart/"
                }
            }
        },
        "/rest/getGenres": {
            "get": {
                "summary": "Returns all genres.",
                "description": "Returns all genres.",
                "operationId": "getGenres",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetGenresResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getGenres",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getgenres/"
                }
            }
        },
        "/rest/getIndexes": {
            "get": {
                "summary": "Returns an indexed structure of all artists.",
                "description": "Returns an indexed structure of all artists.",
                "operationId": "getIndexes",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "If specified, only return artists in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ifModifiedSince",
                        "in": "query",
                        "description": "If specified, only return a result if the artist collection has changed since the given time (in milliseconds since 1 Jan 1970).",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetIndexesResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getIndexes",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getindexes/"
                }
            }
        },
        "/rest/getInternetRadioStations": {
            "get": {
                "summary": "Returns all internet radio stations.",
                "description": "Returns all internet radio stations. Takes no extra parameters.",
                "operationId": "getInternetRadioStations",
                "tags": [
                    "Internet Radio"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInternetRadioStationsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getInternetRadioStations",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getinternetradiostations/"
                }
            }
        },
        "/rest/getLicense": {
            "get": {
                "summary": "Get details about the software license.",
                "description": "Get details about the software license.",
                "operationId": "getLicense",
                "tags": [
                    "System"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLicenseResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getLicense",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getlicense/"
                }
            }
        },
        "/rest/getLyrics": {
            "get": {
                "summary": "Searches for and returns lyrics for a given song.",
                "description": "Searches for and returns lyrics for a given song.",
                "operationId": "getLyrics",
                "tags": [
                    "Media Retrieval"
                ],
                "parameters": [
                    {
                        "name": "artist",
                        "in": "query",
                        "description": "The artist name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "The song title.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLyricsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getLyrics",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getlyrics/"
                }
            }
        },
        "/rest/getLyricsBySongId": {
            "get": {
                "summary": "Add support for synchronized lyrics, multiple languages, and retrieval by song ID. ",
                "description": "OpenSubsonic extension name `songLyrics` (As returned by `getOpenSubsonicExtensions`). Retrieves all structured lyrics from the server for a given song. The lyrics can come from embedded tags (SYLT/USLT), LRC file/text file, or any other external source.",
                "operationId": "getLyricsBySongId",
                "tags": [
                    "Media Retrieval",
                    "Extension"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The track ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLyricsBySongIdResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Extension not supported."
                    }
                },
                "externalDocs": {
                    "description": "getLyricsBySongId",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getlyricsbysongid/"
                }
            }
        },
        "/rest/getMusicDirectory": {
            "get": {
                "summary": "Returns a listing of all files in a music directory.",
                "description": "Returns a listing of all files in a music directory. Typically used to get list of albums for an artist, or list of songs for an album.",
                "operationId": "getMusicDirectory",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A string which uniquely identifies the music folder. Obtained by calls to `getIndexes` or `getMusicDirectory`.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMusicDirectoryResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getMusicDirectory",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getmusicdirectory/"
                }
            }
        },
        "/rest/getMusicFolders": {
            "get": {
                "summary": "Returns all configured top-level music folders.",
                "description": "Returns all configured top-level music folders. Takes no extra parameters.",
                "operationId": "getMusicFolders",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMusicFoldersResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getMusicFolders",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getmusicfolders/"
                }
            }
        },
        "/rest/getNewestPodcasts": {
            "get": {
                "summary": "Returns the most recently published Podcast episodes.",
                "description": "Returns the most recently published Podcast episodes.",
                "operationId": "getNewestPodcasts",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The maximum number of episodes to return.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNewestPodcastsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getNewestPodcasts",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getnewestpodcasts/"
                }
            }
        },
        "/rest/getNowPlaying": {
            "get": {
                "summary": "Returns what is currently being played by all users.",
                "description": "Returns what is currently being played by all users. Takes no extra parameters.",
                "operationId": "getNowPlaying",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNowPlayingResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getNowPlaying",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getnowplaying/"
                }
            }
        },
        "/rest/getOpenSubsonicExtensions": {
            "get": {
                "summary": "List the OpenSubsonic extensions supported by this server.",
                "description": "List the OpenSubsonic extensions supported by this server.",
                "operationId": "getOpenSubsonicExtensions",
                "tags": [
                    "System"
                ],
                "security": [],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOpenSubsonicExtensionsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getOpenSubsonicExtensions",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getopensubsonicextensions/"
                }
            }
        },
        "/rest/getPlaylist": {
            "get": {
                "summary": "Returns a listing of files in a saved playlist.",
                "description": "Returns a listing of files in a saved playlist.",
                "operationId": "getPlaylist",
                "tags": [
                    "Playlists"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the playlist to return, as obtained by `getPlaylists`.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPlaylistResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getPlaylist",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getplaylist/"
                }
            }
        },
        "/rest/getPlaylists": {
            "get": {
                "summary": "Returns all playlists a user is allowed to play.",
                "description": "Returns all playlists a user is allowed to play.",
                "operationId": "getPlaylists",
                "tags": [
                    "Playlists"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "(Since 1.8.0) If specified, return playlists for this user rather than for the authenticated user. The authenticated user must have admin role if this parameter is used.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPlaylistsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getPlaylists",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getplaylists/"
                }
            }
        },
        "/rest/getPlayQueue": {
            "get": {
                "summary": "Returns the state of the play queue for this user.",
                "description": "Returns the state of the play queue for this user (as set by savePlayQueue). This includes the tracks in the play queue, the currently playing track, and the position within this track. Typically used to allow a user to move between different clients/apps while retaining the same play queue (for instance when listening to an audio book).",
                "operationId": "getPlayQueue",
                "tags": [
                    "Bookmarks"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPlayQueueResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getPlayQueue",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getplayqueue/"
                }
            }
        },
        "/rest/getPodcastEpisode": {
            "get": {
                "summary": "Returns details for a podcast episode.",
                "description": "OpenSubsonic extension name getPodcastEpisode (As returned by `getOpenSubsonicExtensions`). Returns details for a podcast episode.",
                "operationId": "getPodcastEpisode",
                "tags": [
                    "Podcast",
                    "Extension"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The podcast episode ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPodcastEpisodeResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Extension not supported."
                    }
                },
                "externalDocs": {
                    "description": "getPodcastEpisode",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getpodcastepisode/"
                }
            }
        },
        "/rest/getPodcasts": {
            "get": {
                "summary": "Returns all Podcast channels the server subscribes to, and (optionally) their episodes.",
                "description": "Returns all Podcast channels the server subscribes to, and (optionally) their episodes. This method can also be used to return details for only one channel - refer to the id parameter. A typical use case for this method would be to first retrieve all channels without episodes, and then retrieve all episodes for the single channel the user selects.",
                "operationId": "getPodcasts",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "(Since 1.9.0) If specified, only return the Podcast channel with this ID.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeEpisodes",
                        "in": "query",
                        "description": "(Since 1.9.0) Whether to include Podcast episodes in the returned result.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPodcastsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getPodcasts",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getpodcasts/"
                }
            }
        },
        "/rest/getRandomSongs": {
            "get": {
                "summary": "Returns random songs matching the given criteria.",
                "description": "Returns random songs matching the given criteria.",
                "operationId": "getRandomSongs",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The maximum number of songs to return. Max 500.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 0,
                            "maximum": 500
                        }
                    },
                    {
                        "name": "genre",
                        "in": "query",
                        "description": "Only returns songs belonging to this genre.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "description": "(Since 1.9.0) Only return songs from this year or later.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "description": "Only return songs published before or in this year.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "Only return songs in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRandomSongsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getRandomSongs",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getrandomsongs/"
                }
            }
        },
        "/rest/getScanStatus": {
            "get": {
                "summary": "Returns the current status for media library scanning.",
                "description": "Returns the current status for media library scanning. Takes no extra parameters.",
                "operationId": "getScanStatus",
                "tags": [
                    "Media Library Scanning"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetScanStatusResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getScanStatus",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getscanstatus/"
                }
            }
        },
        "/rest/getShares": {
            "get": {
                "summary": "Returns information about shared media this user is allowed to manage.",
                "description": "Returns information about shared media this user is allowed to manage. Takes no extra parameters.",
                "operationId": "getShares",
                "tags": [
                    "Sharing"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSharesResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getShares",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getshares/"
                }
            }
        },
        "/rest/getSimilarSongs": {
            "get": {
                "summary": "Returns a random collection of songs from the given artist and similar artists.",
                "description": "Returns a random collection of songs from the given artist and similar artists, using data from last.fm. Typically used for artist radio features.",
                "operationId": "getSimilarSongs",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The artist, album or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Max number of songs to return.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "minimum": 0
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSimilarSongsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getSimilarSongs",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getsimilarsongs/"
                }
            }
        },
        "/rest/getSimilarSongs2": {
            "get": {
                "summary": "Returns a random collection of songs from the given artist and similar artists (v2).",
                "description": "Similar to `getSimilarSongs`, but organizes music according to ID3 tags.",
                "operationId": "getSimilarSongs2",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The artist, album or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Max number of songs to return.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "minimum": 0
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSimilarSongs2Response"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getSimilarSongs2",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getsimilarsongs2/"
                }
            }
        },
        "/rest/getSong": {
            "get": {
                "summary": "Returns details for a song.",
                "description": "Returns details for a song.",
                "operationId": "getSong",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSongResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getSong",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getsong/"
                }
            }
        },
        "/rest/getSongsByGenre": {
            "get": {
                "summary": "Returns songs in a given genre.",
                "description": "Returns songs in a given genre.",
                "operationId": "getSongsByGenre",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "name": "genre",
                        "in": "query",
                        "description": "The genre, as returned by `getGenres`.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The maximum number of songs to return. Max 500.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 0,
                            "maximum": 500
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The offset. Useful if you want to page through the songs in a genre.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.12.0) Only return albums in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSongsByGenreResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getSongsByGenre",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getsongsbygenre/"
                }
            }
        },
        "/rest/getStarred": {
            "get": {
                "summary": "Returns starred songs, albums and artists.",
                "description": "Returns starred songs, albums and artists.",
                "operationId": "getStarred",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.12.0) Only return albums in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetStarredResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getStarred",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getstarred/"
                }
            }
        },
        "/rest/getStarred2": {
            "get": {
                "summary": "Returns starred songs, albums and artists.",
                "description": "Similar to `getStarred`, but organizes music according to ID3 tags.",
                "operationId": "getStarred2",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.12.0) Only return albums in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetStarred2Response"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getStarred2",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getstarred2/"
                }
            }
        }
    },
    "components": {
        "responses": {
            "EmptySubsonicResponse": {
                "description": "Successful or failed response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SubsonicResponse"
                        }
                    }
                }
            },
            "BinaryResponse": {
                "description": "Success (binary) or error (xml) response",
                "content": {
                    "application/binary": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "type": "object",
                            "description": "Error response TODO: TO BE DESCRIBED"
                        }
                    }
                }
            }
        },
        "parameters": {
            "f": {
                "name": "f",
                "description": "The response format. Must be 'xml' or 'json'. For the purposes of this document, only `json` is allowed.",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "json"
                    ]
                }
            }
        },
        "securitySchemes": {
            "apiKeyAuth": {
                "type": "apiKey",
                "name": "apiKey",
                "in": "query",
                "description": "[OS] An API key used for authentication. If specified, `p`, `t`, `s` nor `u` can be specified."
            },
            "username": {
                "type": "apiKey",
                "in": "query",
                "name": "u",
                "description": "The username."
            },
            "legacyPassword": {
                "type": "apiKey",
                "in": "query",
                "name": "p",
                "description": "The password, either in clear text or hex-encoded with a “enc:” prefix. Since 1.13.0 this should only be used for testing purposes. `u` must be specified."
            },
            "token": {
                "type": "apiKey",
                "in": "query",
                "name": "t",
                "description": "(Since 1.13.0) The authentication token computed as md5(password + salt). `u` and `s` must be specified. See https://opensubsonic.netlify.app/docs/api-reference/#authentication for details."
            },
            "salt": {
                "type": "apiKey",
                "in": "query",
                "name": "s",
                "description": "(Since 1.13.0) A random string (“salt”) used as input for computing the password hash. `u` and `t` must be specified. See https://opensubsonic.netlify.app/docs/api-reference/#authentication for details."
            },
            "protocolVersion": {
                "type": "apiKey",
                "name": "v",
                "description": "The protocol version implemented by the client, i.e., the version of the subsonic-rest-api.xsd schema used (see below).",
                "in": "query"
            },
            "clientName": {
                "type": "apiKey",
                "name": "c",
                "description": "A unique string identifying the client application.",
                "in": "query"
            }
        },
        "schemas": {
            "SubsonicError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "enum": [
                            0,
                            10,
                            20,
                            30,
                            40,
                            41,
                            42,
                            43,
                            44,
                            50,
                            60,
                            70
                        ],
                        "description": "The error code.\n* 0: A generic error.\n* 10: Required parameter is missing.\n* 20: Incompatible Subsonic REST protocol version. Client must upgrade.\n* 30: Incompatible Subsonic REST protocol version. Server must upgrade.\n* 40: Wrong username or password.\n* 41: Token authentication not supported for LDAP users.\n* 42: Provided authentication mechanism not supported.\n* 43: Multiple conflicting authentication mechanisms provided.\n* 44: Invalid API key.\n* 50: User is not authorized for the given operation.\n* 60: The trial period for the Subsonic server is over. Please upgrade to Subsonic Premium. Visit subsonic.org for details.\n* 70: The requested data was not found."
                    },
                    "message": {
                        "type": "string",
                        "description": "The optional error message"
                    },
                    "helpUrl": {
                        "type": "string",
                        "description": "A URL (documentation, configuration, etc) which may provide additional context for the error)"
                    }
                },
                "required": [
                    "code"
                ],
                "example": {
                    "code": 42,
                    "message": "Authentication mechanism not supported. Use API keys",
                    "helpUrl": "https://example.org/users/apiKey"
                },
                "externalDocs": {
                    "description": "Error",
                    "url": "https://opensubsonic.netlify.app/docs/responses/error/"
                }
            },
            "SubsonicBaseResponse": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "The server supported Subsonic API version."
                    },
                    "type": {
                        "type": "string",
                        "description": "The server actual name. [Ex: Navidrome or gonic]"
                    },
                    "serverVersion": {
                        "type": "string",
                        "description": "The server version."
                    },
                    "openSubsonic": {
                        "type": "boolean",
                        "description": "Must return true if the server support OpenSubsonic API v1"
                    }
                },
                "required": [
                    "version",
                    "type",
                    "serverVersion",
                    "openSubsonic"
                ]
            },
            "SubsonicSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicBaseResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "The status of the request. [Ex: success]",
                                "enum": [
                                    "success"
                                ]
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "example": {
                            "status": "ok",
                            "version": "1.16.1",
                            "type": "AwesomeServerName",
                            "serverVersion": "0.1.3 (tag)",
                            "openSubsonic": true
                        },
                        "externalDocs": {
                            "description": "SubsonicResponse",
                            "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                        }
                    }
                ]
            },
            "SubsonicFailureResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicBaseResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "The status of the request. [Ex: failed]",
                                "enum": [
                                    "failed"
                                ]
                            },
                            "error": {
                                "$ref": "#/components/schemas/SubsonicError"
                            }
                        },
                        "required": [
                            "status",
                            "error"
                        ],
                        "externalDocs": {
                            "description": "SubsonicResponse",
                            "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                        }
                    }
                ]
            },
            "SubsonicResponse": {
                "type": "object",
                "description": "Common answer wrapper.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SubsonicSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "SubsonicResponse",
                    "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                }
            },
            "ItemGenre": {
                "type": "object",
                "description": "A genre returned in list of genres for an item.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Genre name"
                    }
                },
                "required": [
                    "name"
                ],
                "externalDocs": {
                    "description": "ItemGenre",
                    "url": "https://opensubsonic.netlify.app/docs/responses/itemgenre/"
                }
            },
            "ArtistID3": {
                "type": "object",
                "description": "An artist from ID3 tags.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the artist"
                    },
                    "name": {
                        "type": "string",
                        "description": "The artist name."
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "A covertArt id."
                    },
                    "artistImageUrl": {
                        "type": "string",
                        "description": "An url to an external image source."
                    },
                    "albumCount": {
                        "type": "integer",
                        "description": "Artist album count."
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the artist was starred. [ISO 8601]"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "The artist MusicBrainzID."
                    },
                    "sortName": {
                        "type": "string",
                        "description": "The artist sort name."
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of all roles this artist has in the library."
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "externalDocs": {
                    "description": "ArtistID3",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistid3/"
                }
            },
            "Contributor": {
                "type": "object",
                "description": "A contributor artist for a song or an album",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "The contributor role."
                    },
                    "subRole": {
                        "type": "string",
                        "description": "The subRole for roles that may require it. Ex: The instrument for the performer role (TMCL/performer tags). Note: For consistency between different tag formats, the TIPL sub roles should be directly exposed in the role field."
                    },
                    "artist": {
                        "$ref": "#/components/schemas/ArtistID3"
                    }
                },
                "required": [
                    "role",
                    "artist"
                ],
                "externalDocs": {
                    "description": "Contributor",
                    "url": "https://opensubsonic.netlify.app/docs/responses/contributor/"
                }
            },
            "ReplayGain": {
                "type": "object",
                "description": "The replay gain data of a song. Note: If the data is not present the field must be ommited in the answer. (But the replayGain field on Child must always be present)",
                "properties": {
                    "trackGain": {
                        "type": "number",
                        "description": "The track replay gain value. (In Db)"
                    },
                    "albumGain": {
                        "type": "number",
                        "description": "The album replay gain value. (In Db)"
                    },
                    "trackPeak": {
                        "type": "number",
                        "description": "The track peak value. (Must be positive)",
                        "minimum": 0
                    },
                    "albumPeak": {
                        "type": "number",
                        "description": "The album peak value. (Must be positive)",
                        "minimum": 0
                    },
                    "baseGain": {
                        "type": "number",
                        "description": "The base gain value. (In Db) (Ogg Opus Output Gain for example)"
                    },
                    "fallbackGain": {
                        "type": "number",
                        "description": "An optional fallback gain that clients should apply when the corresponding gain value is missing. (Can be computed from the tracks or exposed as an user setting.)"
                    }
                },
                "externalDocs": {
                    "description": "Replay Gain",
                    "url": "https://opensubsonic.netlify.app/docs/responses/replaygain/"
                }
            },
            "GenericMediaType": {
                "type": "string",
                "enum": [
                    "music",
                    "video",
                    "podcast",
                    "audiobook"
                ],
                "description": "The generic type of media [music/podcast/audiobook/video]"
            },
            "MediaType": {
                "type": "string",
                "enum": [
                    "song",
                    "album",
                    "artist"
                ],
                "description": "Note: If you support `musicBrainzId` you must support this field to ensure clients knows what the ID refers to."
            },
            "ExplicitStatus": {
                "type": "string",
                "enum": [
                    "clean",
                    "explicit",
                    ""
                ],
                "description": "Returns “explicit”, “clean” or “”. (For songs extracted from tags “ITUNESADVISORY”: 1 = explicit, 2 = clean, MP4 “rtng”: 1 or 4 = explicit, 2 = clean. See `albumID3` for albums)"
            },
            "Child": {
                "type": "object",
                "description": "A media.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the media."
                    },
                    "parent": {
                        "type": "string",
                        "description": "The id of the parent (folder/album)"
                    },
                    "isDir": {
                        "type": "boolean",
                        "description": "The media is a directory"
                    },
                    "title": {
                        "type": "string",
                        "description": "The media name."
                    },
                    "album": {
                        "type": "string",
                        "description": "The album name."
                    },
                    "artist": {
                        "type": "string",
                        "description": "The artist name."
                    },
                    "track": {
                        "type": "integer",
                        "description": "The track number."
                    },
                    "year": {
                        "type": "integer",
                        "description": "The media year."
                    },
                    "genre": {
                        "type": "string",
                        "description": "The media genre"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "The coverArt id."
                    },
                    "size": {
                        "type": "integer",
                        "description": "A file size of the media."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The mimeType of the media."
                    },
                    "suffix": {
                        "type": "string",
                        "description": "The file suffix of the media."
                    },
                    "transcodedContentType": {
                        "type": "string",
                        "description": "The transcoded mediaType if transcoding should happen."
                    },
                    "transcodedSuffix": {
                        "type": "string",
                        "description": "The file suffix of the transcoded media."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the media in seconds."
                    },
                    "bitRate": {
                        "type": "integer",
                        "description": "The bitrate of the media."
                    },
                    "bitDepth": {
                        "type": "integer",
                        "description": "The bit depth of the media."
                    },
                    "samplingRate": {
                        "type": "integer",
                        "description": "The sampling rate of the media."
                    },
                    "channelCount": {
                        "type": "integer",
                        "description": "The number of channels of the media."
                    },
                    "path": {
                        "type": "string",
                        "description": "The full path of the media."
                    },
                    "isVideo": {
                        "type": "boolean",
                        "description": "Media is a video"
                    },
                    "userRating": {
                        "type": "integer",
                        "description": "The user rating of the media [1-5]",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "averageRating": {
                        "type": "number",
                        "description": "The average rating of the media [1.0-5.0]",
                        "minimum": 0,
                        "maximum": 5
                    },
                    "playCount": {
                        "type": "integer",
                        "description": "The play count."
                    },
                    "discNumber": {
                        "type": "integer",
                        "description": "The disc number."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the media was created. [ISO 8601]"
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the media was starred. [ISO 8601]"
                    },
                    "albumId": {
                        "type": "string",
                        "description": "The corresponding album id"
                    },
                    "artistId": {
                        "type": "string",
                        "description": "The corresponding artist id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/GenericMediaType"
                    },
                    "mediaType": {
                        "$ref": "#/components/schemas/MediaType"
                    },
                    "bookmarkPosition": {
                        "type": "integer",
                        "description": "The bookmark position in seconds"
                    },
                    "originalWidth": {
                        "type": "integer",
                        "description": "The video original Width"
                    },
                    "originalHeight": {
                        "type": "integer",
                        "description": "The video original Height"
                    },
                    "played": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was last played. [ISO 8601]"
                    },
                    "bpm": {
                        "type": "integer",
                        "description": "The BPM of the song."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment tag of the song."
                    },
                    "sortName": {
                        "type": "string",
                        "description": "The song sort name."
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "The track MusicBrainzID."
                    },
                    "genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemGenre"
                        },
                        "description": "The list of all genres of the song."
                    },
                    "artists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "The list of all song artists of the song. (Note: Only the required `ArtistID3` fields should be returned by default)"
                    },
                    "displayArtist": {
                        "type": "string",
                        "description": "The single value display artist."
                    },
                    "albumArtists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "The list of all album artists of the song. (Note: Only the required `ArtistID3` fields should be returned by default)"
                    },
                    "displayAlbumArtist": {
                        "type": "string",
                        "description": "The single value display album artist."
                    },
                    "contributors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contributor"
                        },
                        "description": "The list of all contributor artists of the song."
                    },
                    "displayComposer": {
                        "type": "string",
                        "description": "The single value display composer."
                    },
                    "moods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of all moods of the song."
                    },
                    "replayGain": {
                        "$ref": "#/components/schemas/ReplayGain",
                        "description": "The replay gain data of the song."
                    },
                    "explicitStatus": {
                        "$ref": "#/components/schemas/ExplicitStatus"
                    }
                },
                "required": [
                    "id",
                    "isDir",
                    "title"
                ],
                "externalDocs": {
                    "description": "Child",
                    "url": "https://opensubsonic.netlify.app/docs/responses/child/"
                }
            },
            "Playlist": {
                "type": "object",
                "description": "Playlist.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the playlist"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the playlist"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A comment"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Owner of the playlist"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Is the playlist public"
                    },
                    "songCount": {
                        "type": "integer",
                        "description": "number of songs"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Playlist duration in seconds"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation date [ISO 8601]"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last changed date [ISO 8601]"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "A cover Art Id"
                    },
                    "allowedUser": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of allowed usernames"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "songCount",
                    "duration",
                    "created",
                    "changed"
                ],
                "externalDocs": {
                    "description": "Playlist",
                    "url": "https://opensubsonic.netlify.app/docs/responses/playlist/"
                }
            },
            "PlaylistWithSongs": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Playlist"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "entry": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Child"
                                },
                                "description": "The list of songs"
                            }
                        },
                        "externalDocs": {
                            "description": "PlaylistWithSongs",
                            "url": "https://opensubsonic.netlify.app/docs/responses/playlistwithsongs/"
                        }
                    }
                ]
            },
            "CreatePlaylistSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "playlist": {
                                "$ref": "#/components/schemas/PlaylistWithSongs"
                            }
                        },
                        "required": [
                            "playlist"
                        ]
                    }
                ]
            },
            "CreatePlaylistResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested playlist element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CreatePlaylistSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "CreatePlaylistResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createplaylist/"
                }
            },
            "Share": {
                "type": "object",
                "description": "Share.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The share Id"
                    },
                    "url": {
                        "type": "string",
                        "description": "The share url"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation date [ISO 8601]"
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Share expiration [ISO 8601]"
                    },
                    "lastVisited": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last visit [ISO 8601]"
                    },
                    "visitCount": {
                        "type": "integer",
                        "description": "Visit count"
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "A list of share"
                    }
                },
                "required": [
                    "id",
                    "url",
                    "username",
                    "created",
                    "visitCount"
                ],
                "externalDocs": {
                    "description": "Share",
                    "url": "https://opensubsonic.netlify.app/docs/responses/share/"
                }
            },
            "Shares": {
                "type": "object",
                "description": "Shares.",
                "properties": {
                    "share": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Share"
                        },
                        "description": "A list of share"
                    }
                },
                "externalDocs": {
                    "description": "Shares",
                    "url": "https://opensubsonic.netlify.app/docs/responses/shares/"
                }
            },
            "CreateSharesSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "shares": {
                                "$ref": "#/components/schemas/Shares"
                            }
                        },
                        "required": [
                            "shares"
                        ]
                    }
                ]
            },
            "CreateSharesResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested shares element on success. Which in turns contains a single share element for the newly created share",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CreateSharesSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "CreateSharesResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createshare/"
                }
            },
            "RecordLabel": {
                "type": "object",
                "description": "A record label for an album.",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "externalDocs": {
                    "description": "RecordLabel",
                    "url": "https://opensubsonic.netlify.app/docs/responses/recordlabel/"
                }
            },
            "ItemDate": {
                "type": "object",
                "description": "A date for a media item that may be just a year, or year-month, or full date.",
                "properties": {
                    "year": {
                        "type": "integer",
                        "description": "The year"
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month (1-12)",
                        "minimum": 1,
                        "maximum": 12
                    },
                    "day": {
                        "type": "integer",
                        "description": "The day (1-31)",
                        "minimum": 1,
                        "maximum": 31
                    }
                },
                "externalDocs": {
                    "description": "ItemDate",
                    "url": "https://opensubsonic.netlify.app/docs/responses/itemdate/"
                }
            },
            "DiscTitle": {
                "type": "object",
                "description": "A disc title for an album",
                "properties": {
                    "disc": {
                        "type": "integer",
                        "description": "The disc number."
                    },
                    "title": {
                        "type": "string",
                        "description": "The name of the disc."
                    }
                },
                "required": [
                    "disc",
                    "title"
                ],
                "externalDocs": {
                    "description": "DiscTitle",
                    "url": "https://opensubsonic.netlify.app/docs/responses/disctitle/"
                }
            },
            "AlbumID3": {
                "type": "object",
                "description": "Album with songs.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the album"
                    },
                    "name": {
                        "type": "string",
                        "description": "The album name."
                    },
                    "version": {
                        "type": "string",
                        "description": "The album version name (Remastered, Anniversary Box Set, …)."
                    },
                    "artist": {
                        "type": "string",
                        "description": "Artist name."
                    },
                    "artistId": {
                        "type": "string",
                        "description": "The id of the artist"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "A covertArt id."
                    },
                    "songCount": {
                        "type": "integer",
                        "description": "Number of songs"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Total duration of the album in seconds"
                    },
                    "playCount": {
                        "type": "integer",
                        "description": "Number of play of the album"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was added. [ISO 8601]"
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was added. [ISO 8601]"
                    },
                    "year": {
                        "type": "integer",
                        "description": "The album year"
                    },
                    "genre": {
                        "type": "string",
                        "description": "The album genre"
                    },
                    "played": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was last played. [ISO 8601]"
                    },
                    "userRating": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "description": "The user rating of the album. [1-5]"
                    },
                    "recordLabels": {
                        "type": "array",
                        "description": "The labels producing the album.",
                        "items": {
                            "$ref": "#/components/schemas/RecordLabel"
                        }
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "The album MusicBrainzID."
                    },
                    "genres": {
                        "type": "array",
                        "description": "The list of all genres of the album.",
                        "items": {
                            "$ref": "#/components/schemas/ItemGenre"
                        }
                    },
                    "artists": {
                        "type": "array",
                        "description": "The list of all album artists of the album.",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        }
                    },
                    "displayArtist": {
                        "type": "string",
                        "description": "The single value display artist."
                    },
                    "releaseTypes": {
                        "type": "array",
                        "description": "The types of this album release. (Album, Compilation, EP, Remix, …).",
                        "items": {
                            "type": "string"
                        }
                    },
                    "moods": {
                        "type": "array",
                        "description": "The list of all moods of the album.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sortName": {
                        "type": "string",
                        "description": "The album sort name."
                    },
                    "originalReleaseDate": {
                        "$ref": "#/components/schemas/ItemDate",
                        "description": "Date the album was originally released."
                    },
                    "releaseDate": {
                        "$ref": "#/components/schemas/ItemDate",
                        "description": "Date the specific edition of the album was released. Note: for files using ID3 tags, releaseDate should generally be read from the TDRL tag. Servers that use a different source for this field should document the behavior."
                    },
                    "isCompilation": {
                        "type": "boolean",
                        "description": "True if the album is a compilation."
                    },
                    "explicitStatus": {
                        "$ref": "#/components/schemas/ExplicitStatus"
                    },
                    "discTitles": {
                        "type": "array",
                        "description": "The list of all disc titles of the album.",
                        "items": {
                            "$ref": "#/components/schemas/DiscTitle"
                        }
                    },
                    "song": {
                        "type": "array",
                        "description": "The list of songs",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "songCount",
                    "duration",
                    "created"
                ],
                "externalDocs": {
                    "description": "AlbumID3",
                    "url": "https://opensubsonic.netlify.app/docs/responses/albumid3/"
                }
            },
            "AlbumID3WithSongs": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AlbumID3"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "song": {
                                "type": "array",
                                "description": "The list of songs",
                                "items": {
                                    "$ref": "#/components/schemas/Child"
                                }
                            }
                        },
                        "required": [
                            "song"
                        ],
                        "externalDocs": {
                            "description": "AlbumID3WithSongs",
                            "url": "https://opensubsonic.netlify.app/docs/responses/albumid3withsongs/"
                        }
                    }
                ]
            },
            "GetAlbumSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "album": {
                                "$ref": "#/components/schemas/AlbumID3WithSongs"
                            }
                        },
                        "required": [
                            "album"
                        ]
                    }
                ]
            },
            "GetAlbumResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested album element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetAlbumSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetAlbumResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbum/"
                }
            },
            "AlbumInfo": {
                "type": "object",
                "description": "Album info.",
                "properties": {
                    "notes": {
                        "type": "string",
                        "description": "Album notes"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "Album musicBrainzId"
                    },
                    "lastFmUrl": {
                        "type": "string",
                        "description": "Album lastFmUrl"
                    },
                    "smallImageUrl": {
                        "type": "string",
                        "description": "Album smallImageUrl"
                    },
                    "mediumImageUrl": {
                        "type": "string",
                        "description": "Album mediumImageUrl"
                    },
                    "largeImageUrl": {
                        "type": "string",
                        "description": "Album largeImageUrl"
                    }
                },
                "externalDocs": {
                    "description": "AlbumInfo",
                    "url": "https://opensubsonic.netlify.app/docs/responses/albuminfo/"
                }
            },
            "GetAlbumInfoSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "albumInfo": {
                                "$ref": "#/components/schemas/AlbumInfo"
                            }
                        },
                        "required": [
                            "albumInfo"
                        ]
                    }
                ]
            },
            "GetAlbumInfoResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested albumInfo element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetAlbumInfoSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetAlbumInfoResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbuminfo/"
                }
            },
            "AlbumListType": {
                "type": "string",
                "description": "The list type. Must be one of the following: random, newest, highest, frequent, recent. Since 1.8.0 you can also use alphabeticalByName or alphabeticalByArtist to page through all albums alphabetically, and starred to retrieve starred albums. Since 1.10.1 you can use byYear and byGenre to list albums in a given year range or genre.",
                "enum": [
                    "random",
                    "newest",
                    "highest",
                    "frequent",
                    "recent",
                    "alphabeticalByName",
                    "alphabeticalByArtist",
                    "starred",
                    "byYear",
                    "byGenre"
                ]
            },
            "AlbumList": {
                "type": "object",
                "description": "Album list.",
                "properties": {
                    "album": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "Artist albums"
                    }
                },
                "externalDocs": {
                    "description": "AlbumList",
                    "url": "https://opensubsonic.netlify.app/docs/responses/albumlist/"
                }
            },
            "GetAlbumListSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "albumList": {
                                "$ref": "#/components/schemas/AlbumList"
                            }
                        },
                        "required": [
                            "albumList"
                        ]
                    }
                ]
            },
            "GetAlbumListResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested albumList element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetAlbumListSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetAlbumListResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbumlist/"
                }
            },
            "AlbumList2": {
                "type": "object",
                "properties": {
                    "album": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlbumID3"
                        },
                        "description": "Artist albums",
                        "externalDocs": {
                            "description": "AlbumList2",
                            "url": "https://opensubsonic.netlify.app/docs/responses/albumlist2/"
                        }
                    }
                }
            },
            "GetAlbumList2SuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "albumList2": {
                                "$ref": "#/components/schemas/AlbumList"
                            }
                        },
                        "required": [
                            "albumList2"
                        ]
                    }
                ]
            },
            "GetAlbumList2Response": {
                "type": "object",
                "description": "A subsonic-response element with a nested albumList2 element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetAlbumList2SuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetAlbumList2Response",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbumlist2/"
                }
            },
            "ArtistWithAlbumsID3": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ArtistID3"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "album": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AlbumID3"
                                },
                                "description": "Artist albums"
                            }
                        },
                        "required": [
                            "album"
                        ],
                        "externalDocs": {
                            "description": "ArtistWithAlbumsID3",
                            "url": "https://opensubsonic.netlify.app/docs/responses/artistwithalbumsid3/"
                        }
                    }
                ]
            },
            "GetArtistSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "artist": {
                                "$ref": "#/components/schemas/ArtistWithAlbumsID3"
                            }
                        },
                        "required": [
                            "artist"
                        ]
                    }
                ]
            },
            "GetArtistResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested artist element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetArtistSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetArtistResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartist/"
                }
            },
            "Artist": {
                "type": "object",
                "description": "Artist details.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Artist id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Artist name"
                    },
                    "artistImageUrl": {
                        "type": "string",
                        "description": "Artist image url"
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Artist starred date [ISO 8601]"
                    },
                    "userRating": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "description": "Artist rating [1-5]"
                    },
                    "averageRating": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 5,
                        "description": "Artist average rating [1.0-5.0]"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "externalDocs": {
                    "description": "Artist",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artist/"
                }
            },
            "ArtistInfo": {
                "type": "object",
                "description": "Artist info.",
                "properties": {
                    "biography": {
                        "type": "string",
                        "description": "Artist biography"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "Artist musicBrainzId"
                    },
                    "lastFmUrl": {
                        "type": "string",
                        "description": "Artist lastFmUrl"
                    },
                    "smallImageUrl": {
                        "type": "string",
                        "description": "Artist smallImageUrl"
                    },
                    "mediumImageUrl": {
                        "type": "string",
                        "description": "Artist mediumImageUrl"
                    },
                    "largeImageUrl": {
                        "type": "string",
                        "description": "Artist largeImageUrl"
                    },
                    "similarArtist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Artist"
                        },
                        "description": "Similar artists"
                    }
                },
                "externalDocs": {
                    "description": "ArtistInfo",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistinfo/"
                }
            },
            "GetArtistInfoSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "artistInfo": {
                                "$ref": "#/components/schemas/ArtistInfo"
                            }
                        },
                        "required": [
                            "artistInfo"
                        ]
                    }
                ]
            },
            "GetArtistInfoResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested artistInfo element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetArtistInfoSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetArtistInfoResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartistinfo/"
                }
            },
            "ArtistInfo2": {
                "type": "object",
                "description": "Artist info.",
                "properties": {
                    "biography": {
                        "type": "string",
                        "description": "Artist biography"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "Artist musicBrainzId"
                    },
                    "lastFmUrl": {
                        "type": "string",
                        "description": "Artist lastFmUrl"
                    },
                    "smallImageUrl": {
                        "type": "string",
                        "description": "Artist smallImageUrl"
                    },
                    "mediumImageUrl": {
                        "type": "string",
                        "description": "Artist mediumImageUrl"
                    },
                    "largeImageUrl": {
                        "type": "string",
                        "description": "Artist largeImageUrl"
                    },
                    "similarArtist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "Similar artists"
                    }
                },
                "externalDocs": {
                    "description": "ArtistInfo2",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistinfo2/"
                }
            },
            "GetArtistInfo2SuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "artistInfo2": {
                                "$ref": "#/components/schemas/ArtistInfo2"
                            }
                        },
                        "required": [
                            "artistInfo2"
                        ]
                    }
                ]
            },
            "GetArtistInfo2Response": {
                "type": "object",
                "description": "A subsonic-response element with a nested artistInfo2 element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetArtistInfo2SuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetArtistInfo2Response",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartistinfo2/"
                }
            },
            "ArtistsID3": {
                "type": "object",
                "description": "A list of indexed Artists.",
                "externalDocs": {
                    "description": "ArtistsID3",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistsid3/"
                },
                "properties": {
                    "ignoredArticles": {
                        "type": "string",
                        "description": "List of ignored articles space separated"
                    },
                    "index": {
                        "type": "array",
                        "description": "Index list",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        }
                    }
                }
            },
            "GetArtistsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "artists": {
                                "$ref": "#/components/schemas/ArtistsID3"
                            }
                        },
                        "required": [
                            "artists"
                        ]
                    }
                ]
            },
            "GetArtistsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested artists element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetArtistsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetArtistsResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartists/"
                }
            },
            "Bookmark": {
                "type": "object",
                "description": "A bookmark.",
                "externalDocs": {
                    "description": "Bookmark",
                    "url": "https://opensubsonic.netlify.app/docs/responses/bookmark/"
                },
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "Bookmark position in seconds"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Bookmark comment"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Bookmark creation date [ISO 8601]"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Bookmark last updated date [ISO 8601]"
                    },
                    "entry": {
                        "$ref": "#/components/schemas/Child",
                        "description": "The bookmark file"
                    }
                },
                "required": [
                    "position",
                    "username",
                    "created",
                    "changed",
                    "entry"
                ]
            },
            "Bookmarks": {
                "type": "object",
                "description": "Bookmarks list.",
                "externalDocs": {
                    "description": "Bookmarks",
                    "url": "https://opensubsonic.netlify.app/docs/responses/bookmarks/"
                },
                "properties": {
                    "bookmark": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bookmark"
                        },
                        "description": "List of bookmark"
                    }
                }
            },
            "GetBookmarksSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "bookmarks": {
                                "$ref": "#/components/schemas/Bookmarks"
                            }
                        },
                        "required": [
                            "bookmarks"
                        ]
                    }
                ]
            },
            "GetBookmarksResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested bookmarks element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetBookmarksSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetBookmarksResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getbookmarks/"
                }
            },
            "ChatMessage": {
                "type": "object",
                "description": "A chatMessage.",
                "externalDocs": {
                    "description": "ChatMessage",
                    "url": "https://opensubsonic.netlify.app/docs/responses/chatmessage/"
                },
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Username"
                    },
                    "time": {
                        "type": "integer",
                        "description": "Time in millis since Jan 1 1970"
                    },
                    "message": {
                        "type": "string",
                        "description": "The message"
                    }
                },
                "required": [
                    "id",
                    "username",
                    "message"
                ]
            },
            "ChatMessages": {
                "type": "object",
                "description": "Chat messages list.",
                "externalDocs": {
                    "description": "ChatMessages",
                    "url": "https://opensubsonic.netlify.app/docs/responses/chatmessages/"
                },
                "properties": {
                    "chatMessage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChatMessage"
                        },
                        "description": "List of chatMessage"
                    }
                }
            },
            "GetChatMessagesSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "chatMessages": {
                                "$ref": "#/components/schemas/ChatMessages"
                            }
                        },
                        "required": [
                            "chatMessages"
                        ]
                    }
                ]
            },
            "GetChatMessagesResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested chatMessages element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetChatMessagesSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetChatMessagesResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getchatmessages/"
                }
            },
            "Genre": {
                "type": "object",
                "description": "A genre.",
                "externalDocs": {
                    "description": "Genre",
                    "url": "https://opensubsonic.netlify.app/docs/responses/genre/"
                },
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "Genre name"
                    },
                    "songCount": {
                        "type": "integer",
                        "description": "Genre song count"
                    },
                    "albumCount": {
                        "type": "integer",
                        "description": "Genre album count"
                    }
                },
                "required": [
                    "value",
                    "songCount",
                    "albumCount"
                ]
            },
            "Genres": {
                "type": "object",
                "description": "Genres list.",
                "externalDocs": {
                    "description": "Genres",
                    "url": "https://opensubsonic.netlify.app/docs/responses/genres/"
                },
                "properties": {
                    "genre": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Genre"
                        },
                        "description": "List of genre"
                    }
                }
            },
            "GetGenresSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "genres": {
                                "$ref": "#/components/schemas/Genres"
                            }
                        },
                        "required": [
                            "genres"
                        ]
                    }
                ]
            },
            "GetGenresResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested genres element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetGenresSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetGenresResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getgenres/"
                }
            },
            "Index": {
                "type": "object",
                "description": "An indexed artist list.",
                "externalDocs": {
                    "description": "Index",
                    "url": "https://opensubsonic.netlify.app/docs/responses/index_/"
                },
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Index name"
                    },
                    "artist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Artist"
                        },
                        "description": "Artist list"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Indexes": {
                "type": "object",
                "description": "Artist list.",
                "externalDocs": {
                    "description": "Indexes",
                    "url": "https://opensubsonic.netlify.app/docs/responses/indexes/"
                },
                "properties": {
                    "ignoredArticles": {
                        "type": "string",
                        "description": "The ignored articles"
                    },
                    "lastModified": {
                        "type": "integer",
                        "description": "Last time the index was modified in milliseconds after January 1, 1970 UTC"
                    },
                    "shortcut": {
                        "type": "array",
                        "description": "Shortcut",
                        "items": {
                            "$ref": "#/components/schemas/Artist"
                        }
                    },
                    "child": {
                        "type": "array",
                        "description": "Array of children",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        }
                    },
                    "index": {
                        "type": "array",
                        "description": "Indexed artists",
                        "items": {
                            "$ref": "#/components/schemas/Index"
                        }
                    }
                },
                "required": [
                    "ignoredArticles",
                    "lastModified"
                ]
            },
            "GetIndexesSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "indexes": {
                                "$ref": "#/components/schemas/Indexes"
                            }
                        },
                        "required": [
                            "indexes"
                        ]
                    }
                ]
            },
            "GetIndexesResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested indexes element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetIndexesSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetIndexesResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getindexes/"
                }
            },
            "InternetRadioStation": {
                "type": "object",
                "description": "An internetRadioStation.",
                "externalDocs": {
                    "description": "InternetRadioStation",
                    "url": "https://opensubsonic.netlify.app/docs/responses/internetradiostation/"
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name"
                    },
                    "streamUrl": {
                        "type": "string",
                        "description": "The streamUrl"
                    },
                    "homePageUrl": {
                        "type": "string",
                        "description": "Genre name"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "streamUrl"
                ]
            },
            "InternetRadioStations": {
                "type": "object",
                "description": "internetRadioStations.",
                "externalDocs": {
                    "description": "InternetRadioStations",
                    "url": "https://opensubsonic.netlify.app/docs/responses/internetradiostations/"
                },
                "properties": {
                    "internetRadioStation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InternetRadioStation"
                        },
                        "description": "A list of internetRadioStation"
                    }
                }
            },
            "GetInternetRadioStationsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "internetRadioStations": {
                                "$ref": "#/components/schemas/InternetRadioStations"
                            }
                        },
                        "required": [
                            "internetRadioStations"
                        ]
                    }
                ]
            },
            "GetInternetRadioStationsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested internetRadioStations element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetInternetRadioStationsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetInternetRadioStationsResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getinternetradiostations/"
                }
            },
            "License": {
                "type": "object",
                "description": "getLicense result.",
                "externalDocs": {
                    "description": "License",
                    "url": "https://opensubsonic.netlify.app/docs/responses/license/"
                },
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "description": "The status of the license"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email"
                    },
                    "licenseExpires": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End of license date. [ISO 8601]"
                    },
                    "trialExpires": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End of trial date. [ISO 8601]"
                    }
                },
                "required": [
                    "valid"
                ]
            },
            "GetLicenseSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "license": {
                                "$ref": "#/components/schemas/License"
                            }
                        },
                        "required": [
                            "license"
                        ]
                    }
                ]
            },
            "GetLicenseResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested license element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetLicenseSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetLicenseResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getlicense/"
                }
            },
            "Lyrics": {
                "type": "object",
                "description": "Lyrics.",
                "externalDocs": {
                    "description": "Lyrics",
                    "url": "https://opensubsonic.netlify.app/docs/responses/lyrics/"
                },
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "The lyrics"
                    },
                    "artist": {
                        "type": "string",
                        "description": "The artist name"
                    },
                    "title": {
                        "type": "string",
                        "description": "The song title"
                    }
                },
                "required": [
                    "lyrics"
                ]
            },
            "GetLyricsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "lyrics": {
                                "$ref": "#/components/schemas/Lyrics"
                            }
                        },
                        "required": [
                            "lyrics"
                        ]
                    }
                ]
            },
            "GetLyricsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested lyrics element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetLyricsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetLicenseResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getlyrics/"
                }
            },
            "Line": {
                "type": "object",
                "description": "One line of a song lyric",
                "externalDocs": {
                    "description": "Line",
                    "url": "https://opensubsonic.netlify.app/docs/responses/line/"
                },
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "The actual text of this line"
                    },
                    "start": {
                        "type": "number",
                        "description": "The start time of the lyrics, relative to the start time of the track, in milliseconds. If this is not part of synced lyrics, start __must__ be omitted"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "StructuredLyrics": {
                "type": "object",
                "description": "Structured lyrics",
                "externalDocs": {
                    "description": "StructuredLyrics",
                    "url": "https://opensubsonic.netlify.app/docs/responses/structuredlyrics/"
                },
                "properties": {
                    "lang": {
                        "type": "string",
                        "description": "The lyrics language (ideally ISO 639). If the language is unknown (e.g. lrc file), the server must return `und` (ISO standard) or `xxx` (common value for taggers). Ideally, the server will return lang as an ISO 639 (2/3) code. However, tagged files and external lyrics can come with any value as a potential language code, so clients should take care when displaying lang.\n\nFurthermore, there is special behavior for the value xxx. While not an ISO code, it is commonly used by taggers and other parsing software. Clients should treat xxx as not having a specified language (equivalent to the und code)."
                    },
                    "synced": {
                        "type": "boolean",
                        "description": "True if the lyrics are synced, false otherwise"
                    },
                    "line": {
                        "type": "array",
                        "description": "The actual lyrics. Ordered by start time (synced) or appearance order (unsynced)",
                        "items": {
                            "$ref": "#/components/schemas/Line"
                        }
                    },
                    "displayArtist": {
                        "type": "string",
                        "description": "The artist name to display. This could be the localized name, or any other value"
                    },
                    "displayTitle": {
                        "type": "string",
                        "description": "The title to display. This could be the song title (localized), or any other value"
                    },
                    "offset": {
                        "type": "number",
                        "description": "The offset to apply to all lyrics, in milliseconds. Positive means lyrics appear sooner, negative means later. If not included, the offset must be assumed to be 0"
                    }
                },
                "required": [
                    "lang",
                    "synced",
                    "line"
                ]
            },
            "LyricsList": {
                "type": "object",
                "description": "List of structured lyrics",
                "externalDocs": {
                    "description": "LyricsList",
                    "url": "https://opensubsonic.netlify.app/docs/responses/lyricslist/"
                },
                "properties": {
                    "structuredLyrics": {
                        "type": "array",
                        "description": "Structured lyrics. There can be multiple lyrics of the same type with the same language",
                        "items": {
                            "$ref": "#/components/schemas/StructuredLyrics"
                        }
                    }
                }
            },
            "GetLyricsBySongIdSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "lyricsList": {
                                "$ref": "#/components/schemas/LyricsList"
                            }
                        },
                        "required": [
                            "lyricsList"
                        ]
                    }
                ]
            },
            "GetLyricsBySongIdResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested lyricsList",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetLyricsBySongIdSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetLyricsBySongIdResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getlyricsbysongid/"
                }
            },
            "Directory": {
                "type": "object",
                "description": "Directory.",
                "externalDocs": {
                    "description": "Directory",
                    "url": "https://opensubsonic.netlify.app/docs/responses/directory/"
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id"
                    },
                    "parent": {
                        "type": "string",
                        "description": "Parent item"
                    },
                    "name": {
                        "type": "string",
                        "description": "The directory name"
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Starred date [ISO 8601]"
                    },
                    "userRating": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "description": "The user rating [1-5]"
                    },
                    "averageRating": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 5,
                        "description": "The average rating [1-5]"
                    },
                    "playCount": {
                        "type": "integer",
                        "description": "The play count"
                    },
                    "child": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "The directory content"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "GetMusicDirectorySuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "directory": {
                                "$ref": "#/components/schemas/Directory"
                            }
                        },
                        "required": [
                            "directory"
                        ]
                    }
                ]
            },
            "GetMusicDirectoryResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested directory element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetMusicDirectorySuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetMusicDirectoryResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getmusicdirectory/"
                }
            },
            "MusicFolder": {
                "type": "object",
                "description": "MusicFolder.",
                "externalDocs": {
                    "description": "MusicFolder",
                    "url": "https://opensubsonic.netlify.app/docs/responses/musicfolder/"
                },
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id"
                    },
                    "name": {
                        "type": "string",
                        "description": "The folder name"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "MusicFolders": {
                "type": "object",
                "description": "MusicFolders.",
                "externalDocs": {
                    "description": "MusicFolders",
                    "url": "https://opensubsonic.netlify.app/docs/responses/musicfolders/"
                },
                "properties": {
                    "musicFolder": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MusicFolder"
                        },
                        "description": "The folders"
                    }
                }
            },
            "GetMusicFoldersSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "musicFolders": {
                                "$ref": "#/components/schemas/MusicFolders"
                            }
                        },
                        "required": [
                            "musicFolders"
                        ]
                    }
                ]
            },
            "GetMusicFoldersResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested musicFolders element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetMusicFoldersSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetMusicFoldersResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getmusicfolders/"
                }
            },
            "PodcastStatus": {
                "type": "string",
                "description": "An enumeration of possible podcast statuses",
                "externalDocs": {
                    "description": "PodcastStatus",
                    "url": "https://opensubsonic.netlify.app/docs/responses/podcaststatus/"
                },
                "enum": [
                    "new",
                    "downloading",
                    "completed",
                    "error",
                    "deleted",
                    "skipped"
                ]
            },
            "PodcastEpisode": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Child"
                    },
                    {
                        "type": "object",
                        "description": "A podcast episode.",
                        "externalDocs": {
                            "description": "PodcastEpisode",
                            "url": "https://opensubsonic.netlify.app/docs/responses/podcastepisode/"
                        },
                        "properties": {
                            "streamId": {
                                "type": "string",
                                "description": "ID used for streaming podcast"
                            },
                            "channelId": {
                                "type": "string",
                                "description": "TID of the podcast channel"
                            },
                            "description": {
                                "type": "string",
                                "description": "Episode description"
                            },
                            "status": {
                                "$ref": "#/components/schemas/PodcastStatus"
                            },
                            "publishDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date the episode was published [ISO 8601]"
                            }
                        },
                        "required": [
                            "channelId",
                            "status"
                        ]
                    }
                ]
            },
            "NewestPodcasts": {
                "type": "object",
                "description": "NewestPodcasts.",
                "externalDocs": {
                    "description": "NewestPodcasts",
                    "url": "https://opensubsonic.netlify.app/docs/responses/newestpodcasts/"
                },
                "properties": {
                    "episode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodcastEpisode"
                        }
                    }
                }
            },
            "GetNewestPodcastsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "newestPodcasts": {
                                "$ref": "#/components/schemas/NewestPodcasts"
                            }
                        },
                        "required": [
                            "newestPodcasts"
                        ]
                    }
                ]
            },
            "GetNewestPodcastsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `newestPodcasts` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetNewestPodcastsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetNewestPodcastsResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getnewestpodcasts/"
                }
            },
            "NowPlayingEntry": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Child"
                    },
                    {
                        "type": "object",
                        "description": "NowPlayingEntry.",
                        "externalDocs": {
                            "description": "NowPlayingEntry",
                            "url": "https://opensubsonic.netlify.app/docs/responses/nowplayingentry/"
                        },
                        "properties": {
                            "username": {
                                "type": "string",
                                "description": "The username"
                            },
                            "minutesAgo": {
                                "type": "string",
                                "description": "Last update"
                            },
                            "playerId": {
                                "type": "string",
                                "description": "Player Id"
                            },
                            "playerName": {
                                "type": "string",
                                "description": "Player name"
                            }
                        },
                        "required": [
                            "username",
                            "minutesAgo",
                            "playerId"
                        ]
                    }
                ]
            },
            "NowPlaying": {
                "type": "object",
                "description": "nowPlaying.",
                "externalDocs": {
                    "description": "NowPlaying",
                    "url": "https://opensubsonic.netlify.app/docs/responses/nowplaying/"
                },
                "properties": {
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NowPlayingEntry"
                        },
                        "description": "The now playing entries"
                    }
                },
                "required": [
                    "entry"
                ]
            },
            "GetNowPlayingSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "nowPlaying": {
                                "$ref": "#/components/schemas/NowPlaying"
                            }
                        },
                        "required": [
                            "nowPlaying"
                        ]
                    }
                ]
            },
            "GetNowPlayingResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `nowPlaying` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetNowPlayingSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetNowPlayingResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getnowplaying/"
                }
            },
            "OpenSubsonicExtension": {
                "type": "object",
                "description": "A supported OpenSubsonic API extension.",
                "externalDocs": {
                    "description": "OpenSubsonicExtension",
                    "url": "https://opensubsonic.netlify.app/docs/responses/opensubsonicextension/"
                },
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the extension."
                    },
                    "versions": {
                        "type": "array",
                        "description": "The list of supported versions of the this extension.",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "name",
                    "versions"
                ]
            },
            "GetOpenSubsonicExtensionsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "openSubsonicExtensions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OpenSubsonicExtension"
                                }
                            }
                        },
                        "required": [
                            "openSubsonicExtensions"
                        ]
                    }
                ]
            },
            "GetOpenSubsonicExtensionsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `openSubsonicExtensions` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetOpenSubsonicExtensionsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetOpenSubsonicExtensionsResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getopensubsonicextensions/"
                }
            },
            "GetPlaylistSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "playlist": {
                                "$ref": "#/components/schemas/PlaylistWithSongs"
                            }
                        },
                        "required": [
                            "playlist"
                        ]
                    }
                ]
            },
            "GetPlaylistResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested playlist element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetPlaylistSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetPlaylistResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getplaylist/"
                }
            },
            "Playlists": {
                "type": "object",
                "description": "Playlists.",
                "externalDocs": {
                    "description": "Playlists",
                    "url": "https://opensubsonic.netlify.app/docs/responses/playlists/"
                },
                "properties": {
                    "playlist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Playlist"
                        },
                        "description": "The playlists"
                    }
                }
            },
            "GetPlaylistsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "playlists": {
                                "$ref": "#/components/schemas/Playlists"
                            }
                        },
                        "required": [
                            "playlists"
                        ]
                    }
                ]
            },
            "GetPlaylistsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `playlists` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetPlaylistsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetPlaylistsResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getplaylists/"
                }
            },
            "PlayQueue": {
                "type": "object",
                "description": "NowPlayingEntry.",
                "externalDocs": {
                    "description": "PlayQueue",
                    "url": "https://opensubsonic.netlify.app/docs/responses/playqueue/"
                },
                "properties": {
                    "current": {
                        "type": "string",
                        "description": "ID of currently playing track"
                    },
                    "position": {
                        "type": "integer",
                        "description": "Position in milliseconds of currently playing track"
                    },
                    "username": {
                        "type": "string",
                        "description": "The user this queue belongs to"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date modified [ISO 8601]"
                    },
                    "changedBy": {
                        "type": "string",
                        "description": "Name of client app"
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "The list of songs in the queue"
                    }
                },
                "required": [
                    "username",
                    "changed",
                    "changedBy"
                ]
            },
            "GetPlayQueueSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "playQueue": {
                                "$ref": "#/components/schemas/PlayQueue"
                            }
                        },
                        "required": [
                            "playQueue"
                        ]
                    }
                ]
            },
            "GetPlayQueueResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `playQueue` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetPlayQueueSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetPlayQueueResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getplayqueue/"
                }
            },
            "GetPodcastEpisodeSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "podcastEpisode": {
                                "$ref": "#/components/schemas/PodcastEpisode"
                            }
                        },
                        "required": [
                            "podcastEpisode"
                        ]
                    }
                ]
            },
            "GetPodcastEpisodeResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `podcastEpisode` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetPodcastEpisodeSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetPodcastEpisodeResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getpodcastepisode/"
                }
            },
            "PodcastChannel": {
                "type": "object",
                "description": "A Podcast channel",
                "externalDocs": {
                    "description": "PodcastChannel",
                    "url": "https://opensubsonic.netlify.app/docs/responses/podcastchannel/"
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The channel ID"
                    },
                    "url": {
                        "type": "string",
                        "description": "Podcast channel URL"
                    },
                    "title": {
                        "type": "string",
                        "description": "The channel title"
                    },
                    "description": {
                        "type": "string",
                        "description": "The channel description"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "ID used for retrieving cover art"
                    },
                    "originalImageUrl": {
                        "type": "string",
                        "description": "URL for original image of podcast channel"
                    },
                    "status": {
                        "$ref": "#/components/schemas/PodcastStatus"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "An error message"
                    },
                    "episode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodcastEpisode"
                        },
                        "description": "Podcast episodes with this channel"
                    }
                },
                "required": [
                    "id",
                    "url",
                    "status"
                ]
            },
            "Podcasts": {
                "type": "object",
                "description": "Podcasts.",
                "externalDocs": {
                    "description": "Podcasts",
                    "url": "https://opensubsonic.netlify.app/docs/responses/podcasts/"
                },
                "properties": {
                    "channel": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodcastChannel"
                        },
                        "description": "Podcast channel(s)"
                    }
                }
            },
            "GetPodcastsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "podcasts": {
                                "$ref": "#/components/schemas/Podcasts"
                            }
                        },
                        "required": [
                            "podcasts"
                        ]
                    }
                ]
            },
            "GetPodcastsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `podcasts` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetPodcastsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetPodcastsResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getpodcasts/"
                }
            },
            "Songs": {
                "type": "object",
                "description": "Songs list.",
                "externalDocs": {
                    "description": "Songs",
                    "url": "https://opensubsonic.netlify.app/docs/responses/songs/"
                },
                "properties": {
                    "song": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "List of songs"
                    }
                }
            },
            "GetRandomSongsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "randomSongs": {
                                "$ref": "#/components/schemas/Songs"
                            }
                        },
                        "required": [
                            "randomSongs"
                        ]
                    }
                ]
            },
            "GetRandomSongsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `randomSongs` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetRandomSongsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetRandomSongsResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getrandomsongs/"
                }
            },
            "ScanStatus": {
                "type": "object",
                "description": "Scan status information.",
                "externalDocs": {
                    "description": "ScanStatus",
                    "url": "https://opensubsonic.netlify.app/docs/responses/scanstatus/"
                },
                "properties": {
                    "scanning": {
                        "type": "boolean",
                        "description": "The status of the scan"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Scanned item count"
                    }
                },
                "required": [
                    "scanning"
                ]
            },
            "GetScanStatusSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "scanStatus": {
                                "$ref": "#/components/schemas/ScanStatus"
                            }
                        },
                        "required": [
                            "scanStatus"
                        ]
                    }
                ]
            },
            "GetScanStatusResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `scanStatus` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetScanStatusSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetScanStatusResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getscanstatus/"
                }
            },
            "GetSharesSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "shares": {
                                "$ref": "#/components/schemas/Shares"
                            }
                        },
                        "required": [
                            "shares"
                        ]
                    }
                ]
            },
            "GetSharesResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `shares` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetSharesSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetSharesResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getshares/"
                }
            },
            "SimilarSongs": {
                "type": "object",
                "description": "SimilarSongs list.",
                "externalDocs": {
                    "description": "SimilarSongs",
                    "url": "https://opensubsonic.netlify.app/docs/responses/similarsongs/"
                },
                "properties": {
                    "song": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "List of songs"
                    }
                }
            },
            "GetSimilarSongsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "similarSongs": {
                                "$ref": "#/components/schemas/SimilarSongs"
                            }
                        },
                        "required": [
                            "similarSongs"
                        ]
                    }
                ]
            },
            "GetSimilarSongsResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `similarSongs` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetSimilarSongsSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetSimilarSongsResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getsimilarsongs/"
                }
            },
            "SimilarSongs2": {
                "type": "object",
                "description": "SimilarSongs2 list.",
                "externalDocs": {
                    "description": "SimilarSongs2",
                    "url": "https://opensubsonic.netlify.app/docs/responses/similarsongs2/"
                },
                "properties": {
                    "song": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "List of songs"
                    }
                }
            },
            "GetSimilarSongs2SuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "similarSongs2": {
                                "$ref": "#/components/schemas/SimilarSongs2"
                            }
                        },
                        "required": [
                            "similarSongs2"
                        ]
                    }
                ]
            },
            "GetSimilarSongs2Response": {
                "type": "object",
                "description": "A subsonic-response element with a nested `similarSongs2` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetSimilarSongs2SuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetSimilarSongs2Response",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getsimilarsongs2/"
                }
            },
            "GetSongSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "song": {
                                "$ref": "#/components/schemas/Child"
                            }
                        },
                        "required": [
                            "song"
                        ]
                    }
                ]
            },
            "GetSongResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `song` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetSongSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetSongResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getsong/"
                }
            },
            "GetSongsByGenreSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "songsByGenre": {
                                "$ref": "#/components/schemas/Songs"
                            }
                        },
                        "required": [
                            "songsByGenre"
                        ]
                    }
                ]
            },
            "GetSongsByGenreResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `songsByGenre` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetSongsByGenreSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetSongsByGenreResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getsongsbygenre/"
                }
            },
            "Starred": {
                "type": "object",
                "description": "starred.",
                "externalDocs": {
                    "description": "Starred",
                    "url": "https://opensubsonic.netlify.app/docs/responses/starred/"
                },
                "properties": {
                    "artist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Artist"
                        },
                        "description": "Starred artists"
                    },
                    "album": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "Starred albums"
                    },
                    "song": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "Starred songs"
                    }
                }
            },
            "GetStarredSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "starred": {
                                "$ref": "#/components/schemas/Starred"
                            }
                        },
                        "required": [
                            "starred"
                        ]
                    }
                ]
            },
            "GetStarredResponse": {
                "type": "object",
                "description": "A subsonic-response element with a nested `starred` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetStarredSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetStarredResponse",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getstarred/"
                }
            },
            "Starred2": {
                "type": "object",
                "description": "Starred2.",
                "externalDocs": {
                    "description": "Starred2",
                    "url": "https://opensubsonic.netlify.app/docs/responses/starred2/"
                },
                "properties": {
                    "artist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "Starred artists"
                    },
                    "album": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlbumID3"
                        },
                        "description": "Starred albums"
                    },
                    "song": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "Starred songs"
                    }
                }
            },
            "GetStarred2SuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "starred2": {
                                "$ref": "#/components/schemas/Starred2"
                            }
                        },
                        "required": [
                            "starred2"
                        ]
                    }
                ]
            },
            "GetStarred2Response": {
                "type": "object",
                "description": "A subsonic-response element with a nested `starred2` element on success.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GetStarred2SuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "GetStarred2Response",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getstarred2/"
                }
            }
        }
    }
}