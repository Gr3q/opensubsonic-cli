{
    "openapi": "3.0.0",
    "info": {
        "title": "OpenSubsonic API",
        "version": "1.16.1"
    },
    "servers": [
        {
            "url": "https://api.server.test/v1"
        }
    ],
    "paths": {
        "/rest/addChatMessage": {
            "get": {
                "summary": "Adds a message to the chat log.",
                "description": "Adds a message to the chat log.",
                "operationId": "addChatMessage",
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "name": "message",
                        "in": "query",
                        "description": "The chat message.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    },
                    {
                        "$ref": "#/components/parameters/p"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest/changePassword": {
            "get": {
                "summary": "Changes the password of an existing user on the server.",
                "description": "Changes the password of an existing user on the server, using the following parameters. You can only change your own password unless you have admin privileges.",
                "tags": [
                    "User Management"
                ],
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the user which should change its password.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The new password of the new user, either in clear text of hex-encoded (see above).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest/createBookmark": {
            "get": {
                "summary": "Creates or updates a bookmark.",
                "description": "Creates or updates a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",
                "tags": [
                    "Bookmarks"
                ],
                "operationId": "createBookmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the media file to bookmark. If a bookmark already exists for this file it will be overwritten.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "The position (in milliseconds) within the media file.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "A user-defined comment.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "v": {
                "name": "v",
                "description": "The protocol version implemented by the client, i.e., the version of the subsonic-rest-api.xsd schema used (see below).",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "f": {
                "name": "f",
                "description": "The response format. Must be 'xml' or 'json'. For the purposes of this document, only 'json' is described.",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "json"
                    ]
                }
            },
            "c": {
                "name": "c",
                "description": "A unique string identifying the client application.",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "u": {
                "name": "u",
                "description": "The username.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "t": {
                "name": "t",
                "description": "(Since 1.13.0) The authentication token computed as md5(password + salt). `u` and `s` must be specified. See https://opensubsonic.netlify.app/docs/api-reference/#authentication for details.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "s": {
                "name": "s",
                "description": "(Since 1.13.0) A random string (“salt”) used as input for computing the password hash. `u` and `t` must be specified. See https://opensubsonic.netlify.app/docs/api-reference/#authentication for details.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "apiKey": {
                "name": "apiKey",
                "description": "[OS] An API key used for authentication. If specified, `p`, `t`, `s` nor `u` can be specified.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "p": {
                "name": "p",
                "description": "The password, either in clear text or hex-encoded with a “enc:” prefix. Since 1.13.0 this should only be used for testing purposes. `u` must be specified.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "SubsonicError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "enum": [
                            0,
                            10,
                            20,
                            30,
                            40,
                            41,
                            42,
                            43,
                            44,
                            50,
                            60,
                            70
                        ],
                        "description": "The error code.\n* 0: A generic error.\n* 10: Required parameter is missing.\n* 20: Incompatible Subsonic REST protocol version. Client must upgrade.\n* 30: Incompatible Subsonic REST protocol version. Server must upgrade.\n* 40: Wrong username or password.\n* 41: Token authentication not supported for LDAP users.\n* 42: Provided authentication mechanism not supported.\n* 43: Multiple conflicting authentication mechanisms provided.\n* 44: Invalid API key.\n* 50: User is not authorized for the given operation.\n* 60: The trial period for the Subsonic server is over. Please upgrade to Subsonic Premium. Visit subsonic.org for details.\n* 70: The requested data was not found."
                    },
                    "message": {
                        "type": "string",
                        "description": "The optional error message"
                    },
                    "helpUrl": {
                        "type": "string",
                        "description": "A URL (documentation, configuration, etc) which may provide additional context for the error)"
                    }
                },
                "required": [
                    "code"
                ]
            },
            "SubsonicBaseResponse": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "The server supported Subsonic API version."
                    },
                    "type": {
                        "type": "string",
                        "description": "The server actual name. [Ex: Navidrome or gonic]"
                    },
                    "serverVersion": {
                        "type": "string",
                        "description": "The server version."
                    },
                    "openSubsonic": {
                        "type": "boolean",
                        "description": "Must return true if the server support OpenSubsonic API v1"
                    }
                },
                "required": [
                    "version",
                    "type",
                    "serverVersion",
                    "openSubsonic"
                ]
            },
            "SubsonicSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicBaseResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "The status of the request. [Ex: success]",
                                "enum": [
                                    "success"
                                ]
                            }
                        },
                        "required": [
                            "status"
                        ]
                    }
                ]
            },
            "SubsonicFailureResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicBaseResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "The status of the request. [Ex: failed]",
                                "enum": [
                                    "failed"
                                ]
                            },
                            "error": {
                                "$ref": "#/components/schemas/SubsonicError"
                            }
                        },
                        "required": [
                            "status",
                            "error"
                        ]
                    }
                ]
            },
            "SubsonicResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            }
        }
    }
}