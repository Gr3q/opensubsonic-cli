{
    "openapi": "3.0.0",
    "info": {
        "title": "OpenSubsonic API",
        "version": "1.16.1"
    },
    "servers": [
        {
            "url": "https://api.server.test/v1"
        }
    ],
    "paths": {
        "/rest/addChatMessage": {
            "get": {
                "summary": "Adds a message to the chat log.",
                "description": "Adds a message to the chat log.",
                "operationId": "addChatMessage",
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "name": "message",
                        "in": "query",
                        "description": "The chat message.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    },
                    {
                        "$ref": "#/components/parameters/p"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "addChatMessage",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/addchatmessage/"
                }
            }
        },
        "/rest/changePassword": {
            "get": {
                "summary": "Changes the password of an existing user on the server.",
                "description": "Changes the password of an existing user on the server, using the following parameters. You can only change your own password unless you have admin privileges.",
                "tags": [
                    "User Management"
                ],
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the user which should change its password.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The new password of the new user, either in clear text of hex-encoded (see above).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "changePassword",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/changepassword/"
                }
            }
        },
        "/rest/createBookmark": {
            "get": {
                "summary": "Creates or updates a bookmark.",
                "description": "Creates or updates a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",
                "tags": [
                    "Bookmarks"
                ],
                "operationId": "createBookmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the media file to bookmark. If a bookmark already exists for this file it will be overwritten.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "The position (in milliseconds) within the media file.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "A user-defined comment.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "createBookmark",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createbookmark/"
                }
            }
        },
        "/rest/createInternetRadioStation": {
            "get": {
                "summary": "Adds a new internet radio station.",
                "description": "Adds a new internet radio station. Only users with admin privileges are allowed to call this method.",
                "operationId": "createInternetRadioStation",
                "tags": [
                    "Internet Radio"
                ],
                "parameters": [
                    {
                        "name": "streamUrl",
                        "in": "query",
                        "description": "The stream URL for the station.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The station name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "homepageUrl",
                        "in": "query",
                        "description": "The home page URL for the station.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "createInternetRadioStation",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createinternetradiostation/"
                }
            }
        },
        "/rest/createPlaylist": {
            "get": {
                "summary": "Creates (or updates) a playlist.",
                "description": "Creates (or updates) a playlist.",
                "operationId": "createPlaylist",
                "tags": [
                    "Playlists"
                ],
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "query",
                        "description": "The playlist ID. Required if updating an existing playlist.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The human-readable name of the playlist. Required if creating a new playlist.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "songId",
                        "in": "query",
                        "description": "ID of a song in the playlist. Use one `songId` parameter for each song in the playlist.",
                        "explode": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePlaylistResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createPlaylist",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createplaylist/"
                }
            }
        },
        "/rest/createPodcastChannel": {
            "get": {
                "summary": "Adds a new Podcast channel.",
                "description": "Adds a new Podcast channel. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "createPodcastChannel",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "The URL of the Podcast to add.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "createPodcastChannel",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createpodcastchannel/"
                }
            }
        },
        "/rest/createShare": {
            "get": {
                "summary": "Creates a public URL that can be used by anyone to stream music or video from the server.",
                "description": "Creates a public URL that can be used by anyone to stream music or video from the server. The URL is short and suitable for posting on Facebook, Twitter etc. Note: The user must be authorized to share (see Settings > Users > User is allowed to share files with anyone). Since 1.6.0.",
                "operationId": "createShare",
                "tags": [
                    "Sharing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of a song, album or video to share. Use one id parameter for each entry to share.",
                        "explode": true,
                        "required": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "A user-defined description that will be displayed to people visiting the shared media.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "The time at which the share expires. Given as milliseconds since 1970.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSharesResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createShare",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createshare/"
                }
            }
        },
        "/rest/createUser": {
            "get": {
                "summary": "Creates a new user on the server.",
                "description": "Creates a new user on the server.",
                "operationId": "createUser",
                "tags": [
                    "User Management"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the new user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password of the new user, either in clear text of hex-encoded (see above).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address of the new user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ldapAuthenticated",
                        "in": "query",
                        "description": "Whether the user is authenticated in LDAP.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "adminRole",
                        "in": "query",
                        "description": "Whether the user is administrator.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "settingsRole",
                        "in": "query",
                        "description": "Whether the user is allowed to change personal settings and password.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "streamRole",
                        "in": "query",
                        "description": "Whether the user is allowed to play files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "jukeboxRole",
                        "in": "query",
                        "description": "Whether the user is allowed to play files in jukebox mode.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "downloadRole",
                        "in": "query",
                        "description": "Whether the user is allowed to download files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "uploadRole",
                        "in": "query",
                        "description": "Whether the user is allowed to upload files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "playlistRole",
                        "in": "query",
                        "description": "Whether the user is allowed to create and delete playlists. Since 1.8.0, changing this role has no effect.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "coverArtRole",
                        "in": "query",
                        "description": "Whether the user is allowed to change cover art and tags.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "commentRole",
                        "in": "query",
                        "description": "Whether the user is allowed to create and edit comments and ratings.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "podcastRole",
                        "in": "query",
                        "description": "Whether the user is allowed to administrate Podcasts.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "shareRole",
                        "in": "query",
                        "description": "(Since 1.8.0) Whether the user is allowed to share files with anyone.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "videoConversionRole",
                        "in": "query",
                        "description": "(Since 1.15.0) Whether the user is allowed to start video conversions.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.12.0) IDs of the music folders the user is allowed access to. Include the parameter once for each folder. Default all folders.",
                        "required": false,
                        "explode": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "createUser",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createuser/"
                }
            }
        },
        "/rest/deleteBookmark": {
            "get": {
                "summary": "Deletes a bookmark.",
                "description": "Deletes a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",
                "operationId": "deleteBookmark",
                "tags": [
                    "Bookmarks"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the media file for which to delete the bookmark. Other users\u2019 bookmarks are not affected.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deleteBookmark",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deletebookmark/"
                }
            }
        },
        "/rest/deleteInternetRadioStation": {
            "get": {
                "summary": "Deletes an existing internet radio station.",
                "description": "Deletes an existing internet radio station. Only users with admin privileges are allowed to call this method.",
                "operationId": "deleteInternetRadioStation",
                "tags": [
                    "Internet Radio"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID for the station.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deleteInternetRadioStation",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deleteinternetradiostation/"
                }
            }
        },
        "/rest/deletePlaylist": {
            "get": {
                "summary": "Deletes a saved playlist.",
                "description": "Deletes a saved playlist.",
                "operationId": "deletePlaylist",
                "tags": [
                    "Playlists"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the playlist to delete, as obtained by `getPlaylists`.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deletePlaylist",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deleteplaylist/"
                }
            }
        },
        "/rest/deletePodcastChannel": {
            "get": {
                "summary": "Deletes a Podcast channel.",
                "description": "Deletes a Podcast channel. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "deletePodcastChannel",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the Podcast channel to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deletePodcastChannel",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deletepodcastchannel/"
                }
            }
        },
        "/rest/deletePodcastEpisode": {
            "get": {
                "summary": "Deletes a Podcast episode.",
                "description": "Deletes a Podcast episode. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "deletePodcastEpisode",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the Podcast episode to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deletePodcastEpisode",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deletepodcastepisode/"
                }
            }
        },
        "/rest/deleteShare": {
            "get": {
                "summary": "Deletes an existing share.",
                "description": "Deletes an existing share",
                "operationId": "deleteShare",
                "tags": [
                    "Sharing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the share to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deleteShare",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deleteshare/"
                }
            }
        },
        "/rest/deleteUser": {
            "get": {
                "summary": "Deletes an existing user on the server.",
                "description": "Deletes an existing user on the server.",
                "operationId": "deleteUser",
                "tags": [
                    "User Management"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the user to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "deleteUser",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deleteuser/"
                }
            }
        },
        "/rest/download": {
            "get": {
                "summary": "Downloads a given media file.",
                "description": "Downloads a given media file. Similar to stream, but this method returns the original media data without transcoding or downsampling.",
                "operationId": "download",
                "tags": [
                    "Media Retrieval"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A string which uniquely identifies the file to stream. Obtained by calls to getMusicDirectory.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/BinaryResponse"
                    }
                }
            }
        },
        "/rest/downloadPodcastEpisode": {
            "get": {
                "summary": "Request the server to start downloading a given Podcast episode.",
                "description": "Request the server to start downloading a given Podcast episode. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "downloadPodcastEpisode",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of the Podcast episode to download",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EmptySubsonicResponse"
                    }
                },
                "externalDocs": {
                    "description": "downloadPodcastEpisode",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/downloadpodcastepisode/"
                }
            }
        },
        "/rest/getAlbum": {
            "get": {
                "summary": "Returns details for an album.",
                "description": "Returns details for an album, including a list of songs. This method organizes music according to ID3 tags.",
                "operationId": "getAlbum",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The album ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbum",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbum/"
                }
            }
        },
        "/rest/getAlbumInfo": {
            "get": {
                "summary": "Returns album info.",
                "description": "Returns album notes, image URLs etc, using data from last.fm.",
                "operationId": "getAlbumInfo",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The album ID or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumInfoResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbumInfo",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbuminfo/"
                }
            }
        },
        "/rest/getAlbumInfo2": {
            "get": {
                "summary": "Returns album info (v2).",
                "description": "Similar to getAlbumInfo, but organizes music according to ID3 tags.",
                "operationId": "getAlbumInfo2",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The album ID or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumInfoResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbumInfo2",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbuminfo2/"
                }
            }
        },
        "/rest/getAlbumList": {
            "get": {
                "summary": "Returns a list of random, newest, highest rated etc. albums.",
                "description": "Returns a list of random, newest, highest rated etc. albums. Similar to the album lists on the home page of the Subsonic web interface.",
                "operationId": "getAlbumList",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/AlbumListType"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The number of albums to return. Max 500.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 500
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The list offset. Useful if you for example want to page through the list of newest albums.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "description": "Required if `type=='byYear'`. The first year in the range. If `fromYear` > `toYear` a reverse chronological list is returned.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "description": "Required if `type=='byYear'`. The last year in the range.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "genre",
                        "in": "query",
                        "description": "Required if `type=='byGenre'`. The name of the genre, e.g., “Rock”.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.11.0) Only return albums in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumListResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbumList",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbumlist/"
                }
            }
        },
        "/rest/getAlbumList2": {
            "get": {
                "summary": "Returns a list of random, newest, highest rated etc. albums (v2).",
                "description": "Similar to `getAlbumList`, but organizes music according to ID3 tags.",
                "operationId": "getAlbumList2",
                "tags": [
                    "Lists"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/AlbumListType"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The number of albums to return. Max 500.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 500
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The list offset. Useful if you for example want to page through the list of newest albums.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "fromYear",
                        "in": "query",
                        "description": "Required if `type=='byYear'`. The first year in the range. If `fromYear` > `toYear` a reverse chronological list is returned.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "toYear",
                        "in": "query",
                        "description": "Required if `type=='byYear'`. The last year in the range.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "genre",
                        "in": "query",
                        "description": "Required if `type=='byGenre'`. The name of the genre, e.g., “Rock”.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.11.0) Only return albums in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAlbumList2Response"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAlbumList2",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getalbumlist2/"
                }
            }
        },
        "/rest/getArtist": {
            "get": {
                "summary": "Returns details for an artist.",
                "description": "Returns details for an artist, including a list of albums. This method organizes music according to ID3 tags.",
                "operationId": "getArtist",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The artist ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetArtistResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getArtist",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartist/"
                }
            }
        },
        "/rest/getArtistInfo": {
            "get": {
                "summary": "Returns artist info.",
                "description": "Returns artist info with biography, image URLs and similar artists, using data from last.fm.",
                "operationId": "getArtistInfo",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The artist, album or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Max number of similar artists to return.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "includeNotPresent",
                        "in": "query",
                        "description": "Whether to return artists that are not present in the media library.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetArtistInfoResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getArtistInfo",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartistinfo/"
                }
            }
        },
        "/rest/getArtistInfo2": {
            "get": {
                "summary": "Returns artist info (v2).",
                "description": "Similar to `getArtistInfo`, but organizes music according to ID3 tags.",
                "operationId": "getArtistInfo2",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The artist, album or song ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Max number of similar artists to return.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "includeNotPresent",
                        "in": "query",
                        "description": "Whether to return artists that are not present in the media library.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetArtistInfo2Response"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getArtistInfo2",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartistinfo2/"
                }
            }
        },
        "/rest/getArtists": {
            "get": {
                "summary": "Returns all artists.",
                "description": "Similar to `getIndexes`, but organizes music according to ID3 tags.",
                "operationId": "getArtists",
                "tags": [
                    "Browsing"
                ],
                "parameters": [
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "If specified, only return artists in the music folder with the given ID. See `getMusicFolders`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetArtistsResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getArtists",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getartists/"
                }
            }
        },
        "/rest/getAvatar": {
            "get": {
                "summary": "Returns the avatar (personal image) for a user.",
                "description": "Returns the avatar (personal image) for a user.",
                "operationId": "getAvatar",
                "tags": [
                    "Media Retrieval"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBookmarksResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "getAvatar",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getavatar/"
                }
            }
        },
        "/rest/getBookmarks": {
            "get": {
                "summary": "Returns all bookmarks for this user.",
                "description": "Returns all bookmarks for this user. A bookmark is a position within a certain media file.",
                "operationId": "getBookmarks",
                "tags": [
                    "Bookmarks"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "externalDocs": {
                    "description": "getBookmarks",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/getbookmarks/"
                }
            }
        }
    },
    "components": {
        "responses": {
            "EmptySubsonicResponse": {
                "description": "Successful or failed response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SubsonicResponse"
                        }
                    }
                }
            },
            "BinaryResponse": {
                "description": "Success (binary) or error (xml) response",
                "content": {
                    "application/binary": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "text/xml": {
                        "schema": {
                            "type": "object",
                            "description": "Error response TODO: TO BE DESCRIBED"
                        }
                    }
                }
            }
        },
        "parameters": {
            "v": {
                "name": "v",
                "description": "The protocol version implemented by the client, i.e., the version of the subsonic-rest-api.xsd schema used (see below).",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "f": {
                "name": "f",
                "description": "The response format. Must be 'xml' or 'json'. For the purposes of this document, only 'json' is described.",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "json"
                    ]
                }
            },
            "c": {
                "name": "c",
                "description": "A unique string identifying the client application.",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "u": {
                "name": "u",
                "description": "The username.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "t": {
                "name": "t",
                "description": "(Since 1.13.0) The authentication token computed as md5(password + salt). `u` and `s` must be specified. See https://opensubsonic.netlify.app/docs/api-reference/#authentication for details.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "s": {
                "name": "s",
                "description": "(Since 1.13.0) A random string (“salt”) used as input for computing the password hash. `u` and `t` must be specified. See https://opensubsonic.netlify.app/docs/api-reference/#authentication for details.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "apiKey": {
                "name": "apiKey",
                "description": "[OS] An API key used for authentication. If specified, `p`, `t`, `s` nor `u` can be specified.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "p": {
                "name": "p",
                "description": "The password, either in clear text or hex-encoded with a “enc:” prefix. Since 1.13.0 this should only be used for testing purposes. `u` must be specified.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "SubsonicError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "enum": [
                            0,
                            10,
                            20,
                            30,
                            40,
                            41,
                            42,
                            43,
                            44,
                            50,
                            60,
                            70
                        ],
                        "description": "The error code.\n* 0: A generic error.\n* 10: Required parameter is missing.\n* 20: Incompatible Subsonic REST protocol version. Client must upgrade.\n* 30: Incompatible Subsonic REST protocol version. Server must upgrade.\n* 40: Wrong username or password.\n* 41: Token authentication not supported for LDAP users.\n* 42: Provided authentication mechanism not supported.\n* 43: Multiple conflicting authentication mechanisms provided.\n* 44: Invalid API key.\n* 50: User is not authorized for the given operation.\n* 60: The trial period for the Subsonic server is over. Please upgrade to Subsonic Premium. Visit subsonic.org for details.\n* 70: The requested data was not found."
                    },
                    "message": {
                        "type": "string",
                        "description": "The optional error message"
                    },
                    "helpUrl": {
                        "type": "string",
                        "description": "A URL (documentation, configuration, etc) which may provide additional context for the error)"
                    }
                },
                "required": [
                    "code"
                ],
                "example": {
                    "code": 42,
                    "message": "Authentication mechanism not supported. Use API keys",
                    "helpUrl": "https://example.org/users/apiKey"
                },
                "externalDocs": {
                    "description": "Error",
                    "url": "https://opensubsonic.netlify.app/docs/responses/error/"
                }
            },
            "SubsonicBaseResponse": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "The server supported Subsonic API version."
                    },
                    "type": {
                        "type": "string",
                        "description": "The server actual name. [Ex: Navidrome or gonic]"
                    },
                    "serverVersion": {
                        "type": "string",
                        "description": "The server version."
                    },
                    "openSubsonic": {
                        "type": "boolean",
                        "description": "Must return true if the server support OpenSubsonic API v1"
                    }
                },
                "required": [
                    "version",
                    "type",
                    "serverVersion",
                    "openSubsonic"
                ]
            },
            "SubsonicSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicBaseResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "The status of the request. [Ex: success]",
                                "enum": [
                                    "success"
                                ]
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "example": {
                            "status": "ok",
                            "version": "1.16.1",
                            "type": "AwesomeServerName",
                            "serverVersion": "0.1.3 (tag)",
                            "openSubsonic": true
                        },
                        "externalDocs": {
                            "description": "SubsonicResponse",
                            "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                        }
                    }
                ]
            },
            "SubsonicFailureResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicBaseResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "The status of the request. [Ex: failed]",
                                "enum": [
                                    "failed"
                                ]
                            },
                            "error": {
                                "$ref": "#/components/schemas/SubsonicError"
                            }
                        },
                        "required": [
                            "status",
                            "error"
                        ],
                        "externalDocs": {
                            "description": "SubsonicResponse",
                            "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                        }
                    }
                ]
            },
            "SubsonicResponse": {
                "type": "object",
                "description": "Common answer wrapper.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SubsonicSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "SubsonicResponse",
                    "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                }
            },
            "ItemGenre": {
                "type": "object",
                "description": "A genre returned in list of genres for an item.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Genre name"
                    }
                },
                "required": [
                    "name"
                ],
                "externalDocs": {
                    "description": "ItemGenre",
                    "url": "https://opensubsonic.netlify.app/docs/responses/itemgenre/"
                }
            },
            "ArtistID3": {
                "type": "object",
                "description": "An artist from ID3 tags.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the artist"
                    },
                    "name": {
                        "type": "string",
                        "description": "The artist name."
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "A covertArt id."
                    },
                    "artistImageUrl": {
                        "type": "string",
                        "description": "An url to an external image source."
                    },
                    "albumCount": {
                        "type": "integer",
                        "description": "Artist album count."
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the artist was starred. [ISO 8601]"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "The artist MusicBrainzID."
                    },
                    "sortName": {
                        "type": "string",
                        "description": "The artist sort name."
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of all roles this artist has in the library."
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "externalDocs": {
                    "description": "ArtistID3",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistid3/"
                }
            },
            "Contributor": {
                "type": "object",
                "description": "A contributor artist for a song or an album",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "The contributor role."
                    },
                    "subRole": {
                        "type": "string",
                        "description": "The subRole for roles that may require it. Ex: The instrument for the performer role (TMCL/performer tags). Note: For consistency between different tag formats, the TIPL sub roles should be directly exposed in the role field."
                    },
                    "artist": {
                        "$ref": "#/components/schemas/ArtistID3"
                    }
                },
                "required": [
                    "role",
                    "artist"
                ],
                "externalDocs": {
                    "description": "Contributor",
                    "url": "https://opensubsonic.netlify.app/docs/responses/contributor/"
                }
            },
            "ReplayGain": {
                "type": "object",
                "description": "The replay gain data of a song. Note: If the data is not present the field must be ommited in the answer. (But the replayGain field on Child must always be present)",
                "properties": {
                    "trackGain": {
                        "type": "number",
                        "description": "The track replay gain value. (In Db)"
                    },
                    "albumGain": {
                        "type": "number",
                        "description": "The album replay gain value. (In Db)"
                    },
                    "trackPeak": {
                        "type": "number",
                        "description": "The track peak value. (Must be positive)",
                        "minimum": 0
                    },
                    "albumPeak": {
                        "type": "number",
                        "description": "The album peak value. (Must be positive)",
                        "minimum": 0
                    },
                    "baseGain": {
                        "type": "number",
                        "description": "The base gain value. (In Db) (Ogg Opus Output Gain for example)"
                    },
                    "fallbackGain": {
                        "type": "number",
                        "description": "An optional fallback gain that clients should apply when the corresponding gain value is missing. (Can be computed from the tracks or exposed as an user setting.)"
                    }
                },
                "externalDocs": {
                    "description": "Replay Gain",
                    "url": "https://opensubsonic.netlify.app/docs/responses/replaygain/"
                }
            },
            "GenericMediaType": {
                "type": "string",
                "enum": [
                    "music",
                    "video",
                    "podcast",
                    "audiobook"
                ],
                "description": "The generic type of media [music/podcast/audiobook/video]"
            },
            "MediaType": {
                "type": "string",
                "enum": [
                    "song",
                    "album",
                    "artist"
                ],
                "description": "Note: If you support `musicBrainzId` you must support this field to ensure clients knows what the ID refers to."
            },
            "ExplicitStatus": {
                "type": "string",
                "enum": [
                    "clean",
                    "explicit",
                    ""
                ],
                "description": "Returns “explicit”, “clean” or “”. (For songs extracted from tags “ITUNESADVISORY”: 1 = explicit, 2 = clean, MP4 “rtng”: 1 or 4 = explicit, 2 = clean. See `albumID3` for albums)"
            },
            "Child": {
                "type": "object",
                "description": "A media.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the media."
                    },
                    "parent": {
                        "type": "string",
                        "description": "The id of the parent (folder/album)"
                    },
                    "isDir": {
                        "type": "boolean",
                        "description": "The media is a directory"
                    },
                    "title": {
                        "type": "string",
                        "description": "The media name."
                    },
                    "album": {
                        "type": "string",
                        "description": "The album name."
                    },
                    "artist": {
                        "type": "string",
                        "description": "The artist name."
                    },
                    "track": {
                        "type": "integer",
                        "description": "The track number."
                    },
                    "year": {
                        "type": "integer",
                        "description": "The media year."
                    },
                    "genre": {
                        "type": "string",
                        "description": "The media genre"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "The coverArt id."
                    },
                    "size": {
                        "type": "integer",
                        "description": "A file size of the media."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The mimeType of the media."
                    },
                    "suffix": {
                        "type": "string",
                        "description": "The file suffix of the media."
                    },
                    "transcodedContentType": {
                        "type": "string",
                        "description": "The transcoded mediaType if transcoding should happen."
                    },
                    "transcodedSuffix": {
                        "type": "string",
                        "description": "The file suffix of the transcoded media."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the media in seconds."
                    },
                    "bitRate": {
                        "type": "integer",
                        "description": "The bitrate of the media."
                    },
                    "bitDepth": {
                        "type": "integer",
                        "description": "The bit depth of the media."
                    },
                    "samplingRate": {
                        "type": "integer",
                        "description": "The sampling rate of the media."
                    },
                    "channelCount": {
                        "type": "integer",
                        "description": "The number of channels of the media."
                    },
                    "path": {
                        "type": "string",
                        "description": "The full path of the media."
                    },
                    "isVideo": {
                        "type": "boolean",
                        "description": "Media is a video"
                    },
                    "userRating": {
                        "type": "integer",
                        "description": "The user rating of the media [1-5]",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "averageRating": {
                        "type": "number",
                        "description": "The average rating of the media [1.0-5.0]",
                        "minimum": 0,
                        "maximum": 5
                    },
                    "playCount": {
                        "type": "integer",
                        "description": "The play count."
                    },
                    "discNumber": {
                        "type": "integer",
                        "description": "The disc number."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the media was created. [ISO 8601]"
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the media was starred. [ISO 8601]"
                    },
                    "albumId": {
                        "type": "string",
                        "description": "The corresponding album id"
                    },
                    "artistId": {
                        "type": "string",
                        "description": "The corresponding artist id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/GenericMediaType"
                    },
                    "mediaType": {
                        "$ref": "#/components/schemas/MediaType"
                    },
                    "bookmarkPosition": {
                        "type": "integer",
                        "description": "The bookmark position in seconds"
                    },
                    "originalWidth": {
                        "type": "integer",
                        "description": "The video original Width"
                    },
                    "originalHeight": {
                        "type": "integer",
                        "description": "The video original Height"
                    },
                    "played": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was last played. [ISO 8601]"
                    },
                    "bpm": {
                        "type": "integer",
                        "description": "The BPM of the song."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment tag of the song."
                    },
                    "sortName": {
                        "type": "string",
                        "description": "The song sort name."
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "The track MusicBrainzID."
                    },
                    "genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemGenre"
                        },
                        "description": "The list of all genres of the song."
                    },
                    "artists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "The list of all song artists of the song. (Note: Only the required `ArtistID3` fields should be returned by default)"
                    },
                    "displayArtist": {
                        "type": "string",
                        "description": "The single value display artist."
                    },
                    "albumArtists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "The list of all album artists of the song. (Note: Only the required `ArtistID3` fields should be returned by default)"
                    },
                    "displayAlbumArtist": {
                        "type": "string",
                        "description": "The single value display album artist."
                    },
                    "contributors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contributor"
                        },
                        "description": "The list of all contributor artists of the song."
                    },
                    "displayComposer": {
                        "type": "string",
                        "description": "The single value display composer."
                    },
                    "moods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of all moods of the song."
                    },
                    "replayGain": {
                        "$ref": "#/components/schemas/ReplayGain",
                        "description": "The replay gain data of the song."
                    },
                    "explicitStatus": {
                        "$ref": "#/components/schemas/ExplicitStatus"
                    }
                },
                "required": [
                    "id",
                    "isDir",
                    "title"
                ],
                "externalDocs": {
                    "description": "Child",
                    "url": "https://opensubsonic.netlify.app/docs/responses/child/"
                }
            },
            "PlaylistWithSongs": {
                "type": "object",
                "description": "Playlist with songs.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the playlist"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the playlist"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A comment"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Owner of the playlist"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Is the playlist public"
                    },
                    "songCount": {
                        "type": "integer",
                        "description": "number of songs"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Playlist duration in seconds"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation date [ISO 8601]"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last changed date [ISO 8601]"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "A cover Art Id"
                    },
                    "allowedUser": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of allowed usernames"
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "The list of songs"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "songCount",
                    "duration",
                    "created",
                    "changed"
                ],
                "externalDocs": {
                    "description": "PlaylistWithSongs",
                    "url": "https://opensubsonic.netlify.app/docs/responses/playlistwithsongs/"
                }
            },
            "CreatePlaylistSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "playlist": {
                                "$ref": "#/components/schemas/PlaylistWithSongs"
                            }
                        },
                        "required": [
                            "playlist"
                        ]
                    }
                ]
            },
            "CreatePlaylistResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CreatePlaylistSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "Share": {
                "type": "object",
                "description": "Share.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The share Id"
                    },
                    "url": {
                        "type": "string",
                        "description": "The share url"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation date [ISO 8601]"
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Share expiration [ISO 8601]"
                    },
                    "lastVisited": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last visit [ISO 8601]"
                    },
                    "visitCount": {
                        "type": "integer",
                        "description": "Visit count"
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "A list of share"
                    }
                },
                "required": [
                    "id",
                    "url",
                    "username",
                    "created",
                    "visitCount"
                ],
                "externalDocs": {
                    "description": "Share",
                    "url": "https://opensubsonic.netlify.app/docs/responses/share/"
                }
            },
            "Shares": {
                "type": "object",
                "description": "Shares.",
                "properties": {
                    "share": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Share"
                        },
                        "description": "A list of share"
                    }
                },
                "externalDocs": {
                    "description": "Shares",
                    "url": "https://opensubsonic.netlify.app/docs/responses/shares/"
                }
            },
            "CreateSharesSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "shares": {
                                "$ref": "#/components/schemas/Shares"
                            }
                        },
                        "required": [
                            "shares"
                        ],
                        "description": "A subsonic-response element with a nested shares element on success. Which in turns contains a single share element for the newly created share"
                    }
                ]
            },
            "CreateSharesResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/CreateSharesSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "RecordLabel": {
                "type": "object",
                "description": "A record label for an album.",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "externalDocs": {
                    "description": "RecordLabel",
                    "url": "https://opensubsonic.netlify.app/docs/responses/recordlabel/"
                }
            },
            "ItemDate": {
                "type": "object",
                "description": "A date for a media item that may be just a year, or year-month, or full date.",
                "properties": {
                    "year": {
                        "type": "integer",
                        "description": "The year"
                    },
                    "month": {
                        "type": "integer",
                        "description": "The month (1-12)",
                        "minimum": 1,
                        "maximum": 12
                    },
                    "day": {
                        "type": "integer",
                        "description": "The day (1-31)",
                        "minimum": 1,
                        "maximum": 31
                    }
                },
                "externalDocs": {
                    "description": "ItemDate",
                    "url": "https://opensubsonic.netlify.app/docs/responses/itemdate/"
                }
            },
            "DiscTitle": {
                "type": "object",
                "description": "A disc title for an album",
                "properties": {
                    "disc": {
                        "type": "integer",
                        "description": "The disc number."
                    },
                    "title": {
                        "type": "string",
                        "description": "The name of the disc."
                    }
                },
                "required": [
                    "disc",
                    "title"
                ],
                "externalDocs": {
                    "description": "DiscTitle",
                    "url": "https://opensubsonic.netlify.app/docs/responses/disctitle/"
                }
            },
            "AlbumID3": {
                "type": "object",
                "description": "Album with songs.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the album"
                    },
                    "name": {
                        "type": "string",
                        "description": "The album name."
                    },
                    "version": {
                        "type": "string",
                        "description": "The album version name (Remastered, Anniversary Box Set, …)."
                    },
                    "artist": {
                        "type": "string",
                        "description": "Artist name."
                    },
                    "artistId": {
                        "type": "string",
                        "description": "The id of the artist"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "A covertArt id."
                    },
                    "songCount": {
                        "type": "integer",
                        "description": "Number of songs"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Total duration of the album in seconds"
                    },
                    "playCount": {
                        "type": "integer",
                        "description": "Number of play of the album"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was added. [ISO 8601]"
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was added. [ISO 8601]"
                    },
                    "year": {
                        "type": "integer",
                        "description": "The album year"
                    },
                    "genre": {
                        "type": "string",
                        "description": "The album genre"
                    },
                    "played": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was last played. [ISO 8601]"
                    },
                    "userRating": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "description": "The user rating of the album. [1-5]"
                    },
                    "recordLabels": {
                        "type": "array",
                        "description": "The labels producing the album.",
                        "items": {
                            "$ref": "#/components/schemas/RecordLabel"
                        }
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "The album MusicBrainzID."
                    },
                    "genres": {
                        "type": "array",
                        "description": "The list of all genres of the album.",
                        "items": {
                            "$ref": "#/components/schemas/ItemGenre"
                        }
                    },
                    "artists": {
                        "type": "array",
                        "description": "The list of all album artists of the album.",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        }
                    },
                    "displayArtist": {
                        "type": "string",
                        "description": "The single value display artist."
                    },
                    "releaseTypes": {
                        "type": "array",
                        "description": "The types of this album release. (Album, Compilation, EP, Remix, …).",
                        "items": {
                            "type": "string"
                        }
                    },
                    "moods": {
                        "type": "array",
                        "description": "The list of all moods of the album.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sortName": {
                        "type": "string",
                        "description": "The album sort name."
                    },
                    "originalReleaseDate": {
                        "$ref": "#/components/schemas/ItemDate",
                        "description": "Date the album was originally released."
                    },
                    "releaseDate": {
                        "$ref": "#/components/schemas/ItemDate",
                        "description": "Date the specific edition of the album was released. Note: for files using ID3 tags, releaseDate should generally be read from the TDRL tag. Servers that use a different source for this field should document the behavior."
                    },
                    "isCompilation": {
                        "type": "boolean",
                        "description": "True if the album is a compilation."
                    },
                    "explicitStatus": {
                        "$ref": "#/components/schemas/ExplicitStatus"
                    },
                    "discTitles": {
                        "type": "array",
                        "description": "The list of all disc titles of the album.",
                        "items": {
                            "$ref": "#/components/schemas/DiscTitle"
                        }
                    },
                    "song": {
                        "type": "array",
                        "description": "The list of songs",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "songCount",
                    "duration",
                    "created"
                ],
                "externalDocs": {
                    "description": "AlbumID3",
                    "url": "https://opensubsonic.netlify.app/docs/responses/albumid3/"
                }
            },
            "AlbumID3WithSongs": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AlbumID3"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "song": {
                                "type": "array",
                                "description": "The list of songs",
                                "items": {
                                    "$ref": "#/components/schemas/Child"
                                }
                            }
                        },
                        "required": [
                            "song"
                        ],
                        "externalDocs": {
                            "description": "AlbumID3WithSongs",
                            "url": "https://opensubsonic.netlify.app/docs/responses/albumid3withsongs/"
                        }
                    }
                ]
            },
            "GetAlbumSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "album": {
                                "$ref": "#/components/schemas/AlbumID3WithSongs"
                            }
                        },
                        "required": [
                            "album"
                        ],
                        "description": "A subsonic-response element with a nested album element on success."
                    }
                ]
            },
            "GetAlbumResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetAlbumSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "AlbumInfo": {
                "type": "object",
                "description": "Album info.",
                "properties": {
                    "notes": {
                        "type": "string",
                        "description": "Album notes"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "Album musicBrainzId"
                    },
                    "lastFmUrl": {
                        "type": "string",
                        "description": "Album lastFmUrl"
                    },
                    "smallImageUrl": {
                        "type": "string",
                        "description": "Album smallImageUrl"
                    },
                    "mediumImageUrl": {
                        "type": "string",
                        "description": "Album mediumImageUrl"
                    },
                    "largeImageUrl": {
                        "type": "string",
                        "description": "Album largeImageUrl"
                    }
                },
                "externalDocs": {
                    "description": "AlbumInfo",
                    "url": "https://opensubsonic.netlify.app/docs/responses/albuminfo/"
                }
            },
            "GetAlbumInfoSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "albumInfo": {
                                "$ref": "#/components/schemas/AlbumInfo"
                            }
                        },
                        "required": [
                            "albumInfo"
                        ],
                        "description": "A subsonic-response element with a nested albumInfo element on success."
                    }
                ]
            },
            "GetAlbumInfoResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetAlbumInfoSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "AlbumListType": {
                "type": "string",
                "description": "The list type. Must be one of the following: random, newest, highest, frequent, recent. Since 1.8.0 you can also use alphabeticalByName or alphabeticalByArtist to page through all albums alphabetically, and starred to retrieve starred albums. Since 1.10.1 you can use byYear and byGenre to list albums in a given year range or genre.",
                "enum": [
                    "random",
                    "newest",
                    "highest",
                    "frequent",
                    "recent",
                    "alphabeticalByName",
                    "alphabeticalByArtist",
                    "starred",
                    "byYear",
                    "byGenre"
                ]
            },
            "AlbumList": {
                "type": "object",
                "description": "Album list.",
                "properties": {
                    "album": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "Artist albums"
                    }
                },
                "externalDocs": {
                    "description": "AlbumList",
                    "url": "https://opensubsonic.netlify.app/docs/responses/albumlist/"
                }
            },
            "GetAlbumListSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "albumList": {
                                "$ref": "#/components/schemas/AlbumList"
                            }
                        },
                        "required": [
                            "albumList"
                        ],
                        "description": "A subsonic-response element with a nested albumList element on success."
                    }
                ]
            },
            "GetAlbumListResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetAlbumListSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "AlbumList2": {
                "type": "object",
                "properties": {
                    "album": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlbumID3"
                        },
                        "description": "Artist albums",
                        "externalDocs": {
                            "description": "AlbumList2",
                            "url": "https://opensubsonic.netlify.app/docs/responses/albumlist2/"
                        }
                    }
                }
            },
            "GetAlbumList2SuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "albumList2": {
                                "$ref": "#/components/schemas/AlbumList"
                            }
                        },
                        "required": [
                            "albumList2"
                        ],
                        "description": "A subsonic-response element with a nested albumList2 element on success."
                    }
                ]
            },
            "GetAlbumList2Response": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetAlbumList2SuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "ArtistWithAlbumsID3": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ArtistID3"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "album": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AlbumID3"
                                },
                                "description": "Artist albums"
                            }
                        },
                        "required": [
                            "album"
                        ],
                        "externalDocs": {
                            "description": "ArtistWithAlbumsID3",
                            "url": "https://opensubsonic.netlify.app/docs/responses/artistwithalbumsid3/"
                        }
                    }
                ]
            },
            "GetArtistSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "artist": {
                                "$ref": "#/components/schemas/ArtistWithAlbumsID3"
                            }
                        },
                        "required": [
                            "artist"
                        ],
                        "description": "A subsonic-response element with a nested `artist` element on success."
                    }
                ]
            },
            "GetArtistResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetArtistSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "Artist": {
                "type": "object",
                "description": "Artist details.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Artist id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Artist name"
                    },
                    "artistImageUrl": {
                        "type": "string",
                        "description": "Artist image url"
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Artist starred date [ISO 8601]"
                    },
                    "userRating": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "description": "Artist rating [1-5]"
                    },
                    "averageRating": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 5,
                        "description": "Artist average rating [1.0-5.0]"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "externalDocs": {
                    "description": "Artist",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artist/"
                }
            },
            "ArtistInfo": {
                "type": "object",
                "description": "Artist info.",
                "properties": {
                    "biography": {
                        "type": "string",
                        "description": "Artist biography"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "Artist musicBrainzId"
                    },
                    "lastFmUrl": {
                        "type": "string",
                        "description": "Artist lastFmUrl"
                    },
                    "smallImageUrl": {
                        "type": "string",
                        "description": "Artist smallImageUrl"
                    },
                    "mediumImageUrl": {
                        "type": "string",
                        "description": "Artist mediumImageUrl"
                    },
                    "largeImageUrl": {
                        "type": "string",
                        "description": "Artist largeImageUrl"
                    },
                    "similarArtist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Artist"
                        },
                        "description": "Similar artists"
                    }
                },
                "externalDocs": {
                    "description": "ArtistInfo",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistinfo/"
                }
            },
            "GetArtistInfoSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "artistInfo": {
                                "$ref": "#/components/schemas/ArtistInfo"
                            }
                        },
                        "required": [
                            "artistInfo"
                        ],
                        "description": "A subsonic-response element with a nested `artistInfo` element on success."
                    }
                ]
            },
            "GetArtistInfoResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetArtistInfoSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "ArtistInfo2": {
                "type": "object",
                "description": "Artist info.",
                "properties": {
                    "biography": {
                        "type": "string",
                        "description": "Artist biography"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "Artist musicBrainzId"
                    },
                    "lastFmUrl": {
                        "type": "string",
                        "description": "Artist lastFmUrl"
                    },
                    "smallImageUrl": {
                        "type": "string",
                        "description": "Artist smallImageUrl"
                    },
                    "mediumImageUrl": {
                        "type": "string",
                        "description": "Artist mediumImageUrl"
                    },
                    "largeImageUrl": {
                        "type": "string",
                        "description": "Artist largeImageUrl"
                    },
                    "similarArtist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "Similar artists"
                    }
                },
                "externalDocs": {
                    "description": "ArtistInfo2",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistinfo2/"
                }
            },
            "GetArtistInfo2SuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "artistInfo2": {
                                "$ref": "#/components/schemas/ArtistInfo2"
                            }
                        },
                        "required": [
                            "artistInfo2"
                        ],
                        "description": "A subsonic-response element with a nested `artistInfo2` element on success."
                    }
                ]
            },
            "GetArtistInfo2Response": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetArtistInfo2SuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "ArtistsID3": {
                "type": "object",
                "description": "A list of indexed Artists.",
                "externalDocs": {
                    "description": "ArtistsID3",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistsid3/"
                },
                "properties": {
                    "ignoredArticles": {
                        "type": "string",
                        "description": "List of ignored articles space separated"
                    },
                    "index": {
                        "type": "array",
                        "description": "Index list",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        }
                    }
                }
            },
            "GetArtistsSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "artists": {
                                "$ref": "#/components/schemas/ArtistsID3"
                            }
                        },
                        "required": [
                            "artists"
                        ],
                        "description": "A subsonic-response element with a nested `artists` element on success."
                    }
                ]
            },
            "GetArtistsResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetArtistsSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "Bookmark": {
                "type": "object",
                "description": "A bookmark.",
                "externalDocs": {
                    "description": "Bookmark",
                    "url": "https://opensubsonic.netlify.app/docs/responses/bookmark/"
                },
                "properties": {
                    "position": {
                        "type": "integer",
                        "description": "Bookmark position in seconds"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Bookmark comment"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Bookmark creation date [ISO 8601]"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Bookmark last updated date [ISO 8601]"
                    },
                    "entry": {
                        "$ref": "#/components/schemas/Child",
                        "description": "The bookmark file"
                    }
                },
                "required": [
                    "position",
                    "username",
                    "created",
                    "changed",
                    "entry"
                ]
            },
            "Bookmarks": {
                "type": "object",
                "description": "Bookmarks list.",
                "externalDocs": {
                    "description": "Bookmarks",
                    "url": "https://opensubsonic.netlify.app/docs/responses/bookmarks/"
                },
                "properties": {
                    "bookmark": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bookmark"
                        },
                        "description": "List of bookmark"
                    }
                }
            },
            "GetBookmarksSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "bookmarks": {
                                "$ref": "#/components/schemas/Bookmarks"
                            }
                        },
                        "required": [
                            "bookmarks"
                        ],
                        "description": "A subsonic-response element with a nested `bookmarks` element on success."
                    }
                ]
            },
            "GetBookmarksResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GetBookmarksSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            }
        }
    }
}