{
    "openapi": "3.0.0",
    "info": {
        "title": "OpenSubsonic API",
        "version": "1.16.1"
    },
    "servers": [
        {
            "url": "https://api.server.test/v1"
        }
    ],
    "paths": {
        "/rest/addChatMessage": {
            "get": {
                "summary": "Adds a message to the chat log.",
                "description": "Adds a message to the chat log.",
                "operationId": "addChatMessage",
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "name": "message",
                        "in": "query",
                        "description": "The chat message.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    },
                    {
                        "$ref": "#/components/parameters/p"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "addChatMessage",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/addchatmessage/"
                }
            }
        },
        "/rest/changePassword": {
            "get": {
                "summary": "Changes the password of an existing user on the server.",
                "description": "Changes the password of an existing user on the server, using the following parameters. You can only change your own password unless you have admin privileges.",
                "tags": [
                    "User Management"
                ],
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the user which should change its password.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The new password of the new user, either in clear text of hex-encoded (see above).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "changePassword",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/changepassword/"
                }
            }
        },
        "/rest/createBookmark": {
            "get": {
                "summary": "Creates or updates a bookmark.",
                "description": "Creates or updates a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",
                "tags": [
                    "Bookmarks"
                ],
                "operationId": "createBookmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the media file to bookmark. If a bookmark already exists for this file it will be overwritten.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "The position (in milliseconds) within the media file.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "A user-defined comment.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createBookmark",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createbookmark/"
                }
            }
        },
        "/rest/createInternetRadioStation": {
            "get": {
                "summary": "Adds a new internet radio station.",
                "description": "Adds a new internet radio station. Only users with admin privileges are allowed to call this method.",
                "operationId": "createInternetRadioStation",
                "tags": [
                    "Internet Radio"
                ],
                "parameters": [
                    {
                        "name": "streamUrl",
                        "in": "query",
                        "description": "The stream URL for the station.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The station name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "homepageUrl",
                        "in": "query",
                        "description": "The home page URL for the station.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createInternetRadioStation",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createinternetradiostation/"
                }
            }
        },
        "/rest/createPlaylist": {
            "get": {
                "summary": "Creates (or updates) a playlist.",
                "description": "Creates (or updates) a playlist.",
                "operationId": "createPlaylist",
                "tags": [
                    "Playlists"
                ],
                "parameters": [
                    {
                        "name": "playlistId",
                        "in": "query",
                        "description": "The playlist ID. Required if updating an existing playlist.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The human-readable name of the playlist. Required if creating a new playlist.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "songId",
                        "in": "query",
                        "description": "ID of a song in the playlist. Use one `songId` parameter for each song in the playlist.",
                        "explode": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaylistResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createPlaylist",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createplaylist/"
                }
            }
        },
        "/rest/createPodcastChannel": {
            "get": {
                "summary": "Adds a new Podcast channel.",
                "description": "Adds a new Podcast channel. Note: The user must be authorized for Podcast administration (see Settings > Users > User is allowed to administrate Podcasts).",
                "operationId": "createPodcastChannel",
                "tags": [
                    "Podcast"
                ],
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "description": "The URL of the Podcast to add.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createPodcastChannel",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createpodcastchannel/"
                }
            }
        },
        "/rest/createShare": {
            "get": {
                "summary": "Creates a public URL that can be used by anyone to stream music or video from the server.",
                "description": "Creates a public URL that can be used by anyone to stream music or video from the server. The URL is short and suitable for posting on Facebook, Twitter etc. Note: The user must be authorized to share (see Settings > Users > User is allowed to share files with anyone). Since 1.6.0.",
                "operationId": "createShare",
                "tags": [
                    "Sharing"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of a song, album or video to share. Use one id parameter for each entry to share.",
                        "explode": true,
                        "required": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "A user-defined description that will be displayed to people visiting the shared media.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "The time at which the share expires. Given as milliseconds since 1970.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SharesResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createShare",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createshare/"
                }
            }
        },
        "/rest/createUser": {
            "get": {
                "summary": "Creates a new user on the server.",
                "description": "Creates a new user on the server.",
                "operationId": "createUser",
                "tags": [
                    "User Management"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The name of the new user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password of the new user, either in clear text of hex-encoded (see above).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address of the new user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ldapAuthenticated",
                        "in": "query",
                        "description": "Whether the user is authenticated in LDAP.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "adminRole",
                        "in": "query",
                        "description": "Whether the user is administrator.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "settingsRole",
                        "in": "query",
                        "description": "Whether the user is allowed to change personal settings and password.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "streamRole",
                        "in": "query",
                        "description": "Whether the user is allowed to play files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "jukeboxRole",
                        "in": "query",
                        "description": "Whether the user is allowed to play files in jukebox mode.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "downloadRole",
                        "in": "query",
                        "description": "Whether the user is allowed to download files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "uploadRole",
                        "in": "query",
                        "description": "Whether the user is allowed to upload files.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "playlistRole",
                        "in": "query",
                        "description": "Whether the user is allowed to create and delete playlists. Since 1.8.0, changing this role has no effect.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "coverArtRole",
                        "in": "query",
                        "description": "Whether the user is allowed to change cover art and tags.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "commentRole",
                        "in": "query",
                        "description": "Whether the user is allowed to create and edit comments and ratings.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "podcastRole",
                        "in": "query",
                        "description": "Whether the user is allowed to administrate Podcasts.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "shareRole",
                        "in": "query",
                        "description": "(Since 1.8.0) Whether the user is allowed to share files with anyone.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "videoConversionRole",
                        "in": "query",
                        "description": "(Since 1.15.0) Whether the user is allowed to start video conversions.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "musicFolderId",
                        "in": "query",
                        "description": "(Since 1.12.0) IDs of the music folders the user is allowed access to. Include the parameter once for each folder. Default all folders.",
                        "required": false,
                        "explode": true,
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "createUser",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/createuser/"
                }
            }
        },
        "/rest/deleteBookmark": {
            "get": {
                "summary": "Deletes a bookmark.",
                "description": "Deletes a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",
                "operationId": "deleteBookmark",
                "tags": [
                    "Bookmarks"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the media file for which to delete the bookmark. Other users\u2019 bookmarks are not affected.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/v"
                    },
                    {
                        "$ref": "#/components/parameters/f"
                    },
                    {
                        "$ref": "#/components/parameters/c"
                    },
                    {
                        "$ref": "#/components/parameters/u"
                    },
                    {
                        "$ref": "#/components/parameters/t"
                    },
                    {
                        "$ref": "#/components/parameters/s"
                    },
                    {
                        "$ref": "#/components/parameters/apiKey"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful or failed response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsonicResponse"
                                }
                            }
                        }
                    }
                },
                "externalDocs": {
                    "description": "deleteBookmark",
                    "url": "https://opensubsonic.netlify.app/docs/endpoints/deletebookmark/"
                }
            }
        }
    },
    "components": {
        "parameters": {
            "v": {
                "name": "v",
                "description": "The protocol version implemented by the client, i.e., the version of the subsonic-rest-api.xsd schema used (see below).",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "f": {
                "name": "f",
                "description": "The response format. Must be 'xml' or 'json'. For the purposes of this document, only 'json' is described.",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "json"
                    ]
                }
            },
            "c": {
                "name": "c",
                "description": "A unique string identifying the client application.",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "u": {
                "name": "u",
                "description": "The username.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "t": {
                "name": "t",
                "description": "(Since 1.13.0) The authentication token computed as md5(password + salt). `u` and `s` must be specified. See https://opensubsonic.netlify.app/docs/api-reference/#authentication for details.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "s": {
                "name": "s",
                "description": "(Since 1.13.0) A random string (“salt”) used as input for computing the password hash. `u` and `t` must be specified. See https://opensubsonic.netlify.app/docs/api-reference/#authentication for details.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "apiKey": {
                "name": "apiKey",
                "description": "[OS] An API key used for authentication. If specified, `p`, `t`, `s` nor `u` can be specified.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "p": {
                "name": "p",
                "description": "The password, either in clear text or hex-encoded with a “enc:” prefix. Since 1.13.0 this should only be used for testing purposes. `u` must be specified.",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "SubsonicError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "enum": [
                            0,
                            10,
                            20,
                            30,
                            40,
                            41,
                            42,
                            43,
                            44,
                            50,
                            60,
                            70
                        ],
                        "description": "The error code.\n* 0: A generic error.\n* 10: Required parameter is missing.\n* 20: Incompatible Subsonic REST protocol version. Client must upgrade.\n* 30: Incompatible Subsonic REST protocol version. Server must upgrade.\n* 40: Wrong username or password.\n* 41: Token authentication not supported for LDAP users.\n* 42: Provided authentication mechanism not supported.\n* 43: Multiple conflicting authentication mechanisms provided.\n* 44: Invalid API key.\n* 50: User is not authorized for the given operation.\n* 60: The trial period for the Subsonic server is over. Please upgrade to Subsonic Premium. Visit subsonic.org for details.\n* 70: The requested data was not found."
                    },
                    "message": {
                        "type": "string",
                        "description": "The optional error message"
                    },
                    "helpUrl": {
                        "type": "string",
                        "description": "A URL (documentation, configuration, etc) which may provide additional context for the error)"
                    }
                },
                "required": [
                    "code"
                ],
                "example": {
                    "code": 42,
                    "message": "Authentication mechanism not supported. Use API keys",
                    "helpUrl": "https://example.org/users/apiKey"
                },
                "externalDocs": {
                    "description": "Error",
                    "url": "https://opensubsonic.netlify.app/docs/responses/error/"
                }
            },
            "SubsonicBaseResponse": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "The server supported Subsonic API version."
                    },
                    "type": {
                        "type": "string",
                        "description": "The server actual name. [Ex: Navidrome or gonic]"
                    },
                    "serverVersion": {
                        "type": "string",
                        "description": "The server version."
                    },
                    "openSubsonic": {
                        "type": "boolean",
                        "description": "Must return true if the server support OpenSubsonic API v1"
                    }
                },
                "required": [
                    "version",
                    "type",
                    "serverVersion",
                    "openSubsonic"
                ]
            },
            "SubsonicSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicBaseResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "The status of the request. [Ex: success]",
                                "enum": [
                                    "success"
                                ]
                            }
                        },
                        "required": [
                            "status"
                        ],
                        "example": {
                            "status": "ok",
                            "version": "1.16.1",
                            "type": "AwesomeServerName",
                            "serverVersion": "0.1.3 (tag)",
                            "openSubsonic": true
                        },
                        "externalDocs": {
                            "description": "SubsonicResponse",
                            "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                        }
                    }
                ]
            },
            "SubsonicFailureResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicBaseResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "description": "The status of the request. [Ex: failed]",
                                "enum": [
                                    "failed"
                                ]
                            },
                            "error": {
                                "$ref": "#/components/schemas/SubsonicError"
                            }
                        },
                        "required": [
                            "status",
                            "error"
                        ],
                        "externalDocs": {
                            "description": "SubsonicResponse",
                            "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                        }
                    }
                ]
            },
            "SubsonicResponse": {
                "type": "object",
                "description": "Common answer wrapper.",
                "properties": {
                    "subsonic-response": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/SubsonicSuccessResponse"
                            },
                            {
                                "$ref": "#/components/schemas/SubsonicFailureResponse"
                            }
                        ]
                    }
                },
                "externalDocs": {
                    "description": "SubsonicResponse",
                    "url": "https://opensubsonic.netlify.app/docs/responses/subsonic-response/"
                }
            },
            "ItemGenre": {
                "type": "object",
                "description": "A genre returned in list of genres for an item.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Genre name"
                    }
                },
                "required": [
                    "name"
                ],
                "example": {
                    "name": "Noise"
                },
                "externalDocs": {
                    "description": "ItemGenre",
                    "url": "https://opensubsonic.netlify.app/docs/responses/itemgenre/"
                }
            },
            "ArtistID3": {
                "type": "object",
                "description": "An artist from ID3 tags.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the artist"
                    },
                    "name": {
                        "type": "string",
                        "description": "The artist name."
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "A covertArt id."
                    },
                    "artistImageUrl": {
                        "type": "string",
                        "description": "An url to an external image source."
                    },
                    "albumCount": {
                        "type": "integer",
                        "description": "Artist album count."
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the artist was starred. [ISO 8601]"
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "The artist MusicBrainzID."
                    },
                    "sortName": {
                        "type": "string",
                        "description": "The artist sort name."
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of all roles this artist has in the library."
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "example": {
                    "id": "37ec820ca7193e17040c98f7da7c4b51",
                    "name": "2 Mello",
                    "coverArt": "ar-37ec820ca7193e17040c98f7da7c4b51_0",
                    "albumCount": 1,
                    "userRating": 5,
                    "artistImageUrl": "https://demo.org/image.jpg",
                    "starred": "2017-04-11T10:42:50.842Z",
                    "musicBrainzId": "189002e7-3285-4e2e-92a3-7f6c30d407a2",
                    "sortName": "Mello (2)",
                    "roles": [
                        "artist",
                        "albumartist",
                        "composer"
                    ]
                },
                "externalDocs": {
                    "description": "ArtistID3",
                    "url": "https://opensubsonic.netlify.app/docs/responses/artistid3/"
                }
            },
            "Contributor": {
                "type": "object",
                "description": "A contributor artist for a song or an album",
                "properties": {
                    "role": {
                        "type": "string",
                        "description": "The contributor role."
                    },
                    "subRole": {
                        "type": "string",
                        "description": "The subRole for roles that may require it. Ex: The instrument for the performer role (TMCL/performer tags). Note: For consistency between different tag formats, the TIPL sub roles should be directly exposed in the role field."
                    },
                    "artist": {
                        "$ref": "#/components/schemas/ArtistID3"
                    }
                },
                "required": [
                    "role",
                    "artist"
                ],
                "example": {
                    "role": "performer",
                    "subRole": "Bass",
                    "artist": {
                        "id": "ar-1",
                        "name": "Artist 1"
                    }
                },
                "externalDocs": {
                    "description": "Contributor",
                    "url": "https://opensubsonic.netlify.app/docs/responses/contributor/"
                }
            },
            "ReplayGain": {
                "type": "object",
                "description": "The replay gain data of a song. Note: If the data is not present the field must be ommited in the answer. (But the replayGain field on Child must always be present)",
                "properties": {
                    "trackGain": {
                        "type": "number",
                        "description": "The track replay gain value. (In Db)"
                    },
                    "albumGain": {
                        "type": "number",
                        "description": "The album replay gain value. (In Db)"
                    },
                    "trackPeak": {
                        "type": "number",
                        "description": "The track peak value. (Must be positive)",
                        "minimum": 0
                    },
                    "albumPeak": {
                        "type": "number",
                        "description": "The album peak value. (Must be positive)",
                        "minimum": 0
                    },
                    "baseGain": {
                        "type": "number",
                        "description": "The base gain value. (In Db) (Ogg Opus Output Gain for example)"
                    },
                    "fallbackGain": {
                        "type": "number",
                        "description": "An optional fallback gain that clients should apply when the corresponding gain value is missing. (Can be computed from the tracks or exposed as an user setting.)"
                    }
                },
                "externalDocs": {
                    "description": "Replay Gain",
                    "url": "https://opensubsonic.netlify.app/docs/responses/replaygain/"
                },
                "example": {
                    "trackGain": 0.1,
                    "albumGain": 1.1,
                    "trackPeak": 9.2,
                    "albumPeak": 0,
                    "baseGain": 0,
                    "fallbackGain": -8.1
                }
            },
            "GenericMediaType": {
                "type": "string",
                "enum": [
                    "music",
                    "video",
                    "podcast",
                    "audiobook"
                ],
                "description": "The generic type of media [music/podcast/audiobook/video]"
            },
            "MediaType": {
                "type": "string",
                "enum": [
                    "song",
                    "album",
                    "artist"
                ],
                "description": "Note: If you support `musicBrainzId` you must support this field to ensure clients knows what the ID refers to."
            },
            "ExplicitStatus": {
                "type": "string",
                "enum": [
                    "clean",
                    "explicit",
                    ""
                ],
                "description": "Returns “explicit”, “clean” or “”. (For songs extracted from tags “ITUNESADVISORY”: 1 = explicit, 2 = clean, MP4 “rtng”: 1 or 4 = explicit, 2 = clean. See `albumID3` for albums)"
            },
            "Child": {
                "type": "object",
                "description": "A media.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the media."
                    },
                    "parent": {
                        "type": "string",
                        "description": "The id of the parent (folder/album)"
                    },
                    "isDir": {
                        "type": "boolean",
                        "description": "The media is a directory"
                    },
                    "title": {
                        "type": "string",
                        "description": "The media name."
                    },
                    "album": {
                        "type": "string",
                        "description": "The album name."
                    },
                    "artist": {
                        "type": "string",
                        "description": "The artist name."
                    },
                    "track": {
                        "type": "integer",
                        "description": "The track number."
                    },
                    "year": {
                        "type": "integer",
                        "description": "The media year."
                    },
                    "genre": {
                        "type": "string",
                        "description": "The media genre"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "The coverArt id."
                    },
                    "size": {
                        "type": "integer",
                        "description": "A file size of the media."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The mimeType of the media."
                    },
                    "suffix": {
                        "type": "string",
                        "description": "The file suffix of the media."
                    },
                    "transcodedContentType": {
                        "type": "string",
                        "description": "The transcoded mediaType if transcoding should happen."
                    },
                    "transcodedSuffix": {
                        "type": "string",
                        "description": "The file suffix of the transcoded media."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the media in seconds."
                    },
                    "bitRate": {
                        "type": "integer",
                        "description": "The bitrate of the media."
                    },
                    "bitDepth": {
                        "type": "integer",
                        "description": "The bit depth of the media."
                    },
                    "samplingRate": {
                        "type": "integer",
                        "description": "The sampling rate of the media."
                    },
                    "channelCount": {
                        "type": "integer",
                        "description": "The number of channels of the media."
                    },
                    "path": {
                        "type": "string",
                        "description": "The full path of the media."
                    },
                    "isVideo": {
                        "type": "boolean",
                        "description": "Media is a video"
                    },
                    "userRating": {
                        "type": "integer",
                        "description": "The user rating of the media [1-5]",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "averageRating": {
                        "type": "number",
                        "description": "The average rating of the media [1.0-5.0]",
                        "minimum": 0,
                        "maximum": 5
                    },
                    "playCount": {
                        "type": "integer",
                        "description": "The play count."
                    },
                    "discNumber": {
                        "type": "integer",
                        "description": "The disc number."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the media was created. [ISO 8601]"
                    },
                    "starred": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the media was starred. [ISO 8601]"
                    },
                    "albumId": {
                        "type": "string",
                        "description": "The corresponding album id"
                    },
                    "artistId": {
                        "type": "string",
                        "description": "The corresponding artist id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/GenericMediaType"
                    },
                    "mediaType": {
                        "$ref": "#/components/schemas/MediaType"
                    },
                    "bookmarkPosition": {
                        "type": "integer",
                        "description": "The bookmark position in seconds"
                    },
                    "originalWidth": {
                        "type": "integer",
                        "description": "The video original Width"
                    },
                    "originalHeight": {
                        "type": "integer",
                        "description": "The video original Height"
                    },
                    "played": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date the album was last played. [ISO 8601]"
                    },
                    "bpm": {
                        "type": "integer",
                        "description": "The BPM of the song."
                    },
                    "comment": {
                        "type": "string",
                        "description": "The comment tag of the song."
                    },
                    "sortName": {
                        "type": "string",
                        "description": "The song sort name."
                    },
                    "musicBrainzId": {
                        "type": "string",
                        "description": "The track MusicBrainzID."
                    },
                    "genres": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemGenre"
                        },
                        "description": "The list of all genres of the song."
                    },
                    "artists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "The list of all song artists of the song. (Note: Only the required `ArtistID3` fields should be returned by default)"
                    },
                    "displayArtist": {
                        "type": "string",
                        "description": "The single value display artist."
                    },
                    "albumArtists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistID3"
                        },
                        "description": "The list of all album artists of the song. (Note: Only the required `ArtistID3` fields should be returned by default)"
                    },
                    "displayAlbumArtist": {
                        "type": "string",
                        "description": "The single value display album artist."
                    },
                    "contributors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contributor"
                        },
                        "description": "The list of all contributor artists of the song."
                    },
                    "displayComposer": {
                        "type": "string",
                        "description": "The single value display composer."
                    },
                    "moods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of all moods of the song."
                    },
                    "replayGain": {
                        "$ref": "#/components/schemas/ReplayGain",
                        "description": "The replay gain data of the song."
                    },
                    "explicitStatus": {
                        "$ref": "#/components/schemas/ExplicitStatus"
                    }
                },
                "required": [
                    "id",
                    "isDir",
                    "title"
                ],
                "example": {
                    "id": "082f435a363c32c57d5edb6a678a28d4",
                    "parent": "e8a0685e3f3ec6f251649af2b58b8617",
                    "isDir": false,
                    "title": "\"polar expedition\"",
                    "album": "Live at The Casbah - 2005-04-29",
                    "artist": "The New Deal",
                    "track": 4,
                    "year": 2005,
                    "coverArt": "mf-082f435a363c32c57d5edb6a678a28d4_6410b3ce",
                    "size": 19866778,
                    "contentType": "audio/flac",
                    "suffix": "flac",
                    "starred": "2023-03-27T09:45:27Z",
                    "duration": 178,
                    "bitRate": 880,
                    "bitDepth": 16,
                    "samplingRate": 44100,
                    "channelCount": 2,
                    "path": "The New Deal/Live at The Casbah - 2005-04-29/04 - \"polar expedition\".flac",
                    "playCount": 8,
                    "played": "2023-03-26T22:27:46Z",
                    "discNumber": 1,
                    "created": "2023-03-14T17:51:22.112827504Z",
                    "albumId": "e8a0685e3f3ec6f251649af2b58b8617",
                    "artistId": "97e0398acf63f9fb930d7d4ce209a52b",
                    "type": "music",
                    "mediaType": "song",
                    "isVideo": false,
                    "bpm": 134,
                    "comment": "This is a song comment",
                    "sortName": "Polar expedition",
                    "musicBrainzId": "189002e7-3285-4e2e-92a3-7f6c30d407a2",
                    "genres": [
                        {
                            "name": "Hip-Hop"
                        },
                        {
                            "name": "East coast"
                        }
                    ],
                    "artists": [
                        {
                            "id": "ar-1",
                            "name": "Artist 1"
                        },
                        {
                            "id": "ar-2",
                            "name": "Artist 2"
                        }
                    ],
                    "displayArtist": "Artist 1 feat. Artist 2",
                    "albumArtists": [
                        {
                            "id": "ar-6",
                            "name": "Artist 6"
                        },
                        {
                            "id": "ar-7",
                            "name": "Artist 7"
                        }
                    ],
                    "displayAlbumArtist": "Artist 6 & Artist 7",
                    "contributors": [
                        {
                            "role": "composer",
                            "artist": {
                                "id": "ar-3",
                                "name": "Artist 3"
                            }
                        },
                        {
                            "role": "composer",
                            "artist": {
                                "id": "ar-4",
                                "name": "Artist 4"
                            }
                        },
                        {
                            "role": "lyricist",
                            "artist": {
                                "id": "ar-5",
                                "name": "Artist 5"
                            }
                        },
                        {
                            "role": "performer",
                            "subRole": "Bass",
                            "artist": {
                                "id": "ar-5",
                                "name": "Artist 5"
                            }
                        }
                    ],
                    "displayComposer": "Artist 3, Artist 4",
                    "moods": [
                        "slow",
                        "cool"
                    ],
                    "explicitStatus": "explicit",
                    "replayGain": {
                        "trackGain": 0.1,
                        "albumGain": 1.1,
                        "trackPeak": 9.2,
                        "albumPeak": 9,
                        "baseGain": 0
                    }
                },
                "externalDocs": {
                    "description": "Child",
                    "url": "https://opensubsonic.netlify.app/docs/responses/child/"
                }
            },
            "PlaylistWithSongs": {
                "type": "object",
                "description": "Playlist with songs.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the playlist"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the playlist"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A comment"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Owner of the playlist"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Is the playlist public"
                    },
                    "songCount": {
                        "type": "integer",
                        "description": "number of songs"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Playlist duration in seconds"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation date [ISO 8601]"
                    },
                    "changed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last changed date [ISO 8601]"
                    },
                    "coverArt": {
                        "type": "string",
                        "description": "A cover Art Id"
                    },
                    "allowedUser": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of allowed usernames"
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "The list of songs"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "songCount",
                    "duration",
                    "created",
                    "changed"
                ],
                "example": {
                    "id": "800000075",
                    "name": "testcreate",
                    "owner": "user",
                    "public": true,
                    "created": "2023-03-16T03:18:41+00:00",
                    "changed": "2023-03-16T03:18:41+00:00",
                    "songCount": 1,
                    "duration": 304,
                    "entry": [
                        {
                            "id": "300000060",
                            "parent": "200000002",
                            "title": "BrownSmoke",
                            "isDir": false,
                            "isVideo": false,
                            "type": "music",
                            "albumId": "200000002",
                            "album": "Colorsmoke EP",
                            "artistId": "100000002",
                            "artist": "Synthetic",
                            "coverArt": "300000060",
                            "duration": 304,
                            "bitRate": 20,
                            "bitDepth": 16,
                            "samplingRate": 44100,
                            "channelCount": 2,
                            "userRating": 5,
                            "averageRating": 5,
                            "track": 4,
                            "year": 2007,
                            "genre": "Electronic",
                            "size": 792375,
                            "discNumber": 1,
                            "suffix": "wma",
                            "contentType": "audio/x-ms-wma",
                            "path": "Synthetic/Synthetic_-_Colorsmoke_EP-20k217-2007/04-Synthetic_-_BrownSmokeYSBM20k22khS.wma"
                        }
                    ]
                },
                "externalDocs": {
                    "description": "PlaylistWithSongs",
                    "url": "https://opensubsonic.netlify.app/docs/responses/playlistwithsongs/"
                }
            },
            "PlaylistSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "playlist": {
                                "$ref": "#/components/schemas/PlaylistWithSongs"
                            }
                        },
                        "required": [
                            "playlist"
                        ]
                    }
                ]
            },
            "PlaylistResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PlaylistSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            },
            "Share": {
                "type": "object",
                "description": "Share.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The share Id"
                    },
                    "url": {
                        "type": "string",
                        "description": "The share url"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation date [ISO 8601]"
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Share expiration [ISO 8601]"
                    },
                    "lastVisited": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last visit [ISO 8601]"
                    },
                    "visitCount": {
                        "type": "integer",
                        "description": "Visit count"
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Child"
                        },
                        "description": "A list of share"
                    }
                },
                "required": [
                    "id",
                    "url",
                    "username",
                    "created",
                    "visitCount"
                ],
                "example": {
                    "id": "12",
                    "url": "http://localhost:8989/share.php?id=12&secret=fXlKyEv3",
                    "description": "Forget and Remember (Comfort Fit)",
                    "username": "user",
                    "created": "2023-03-16T04:13:09+00:00",
                    "visitCount": 0,
                    "entry": [
                        {
                            "id": "300000116",
                            "parent": "200000021",
                            "title": "Can I Help U?",
                            "isDir": false,
                            "isVideo": false,
                            "type": "music",
                            "albumId": "200000021",
                            "album": "Forget and Remember",
                            "artistId": "100000036",
                            "artist": "Comfort Fit",
                            "coverArt": "300000116",
                            "duration": 103,
                            "bitRate": 216,
                            "bitDepth": 16,
                            "samplingRate": 44100,
                            "channelCount": 2,
                            "track": 1,
                            "year": 2005,
                            "genre": "Hip-Hop",
                            "size": 2811819,
                            "discNumber": 1,
                            "suffix": "mp3",
                            "contentType": "audio/mpeg",
                            "path": "user/Comfort Fit/Forget And Remember/1 - Can I Help U?.mp3"
                        },
                        {
                            "id": "300000121",
                            "parent": "200000021",
                            "title": "Planetary Picknick",
                            "isDir": false,
                            "isVideo": false,
                            "type": "music",
                            "albumId": "200000021",
                            "album": "Forget and Remember",
                            "artistId": "100000036",
                            "artist": "Comfort Fit",
                            "coverArt": "300000121",
                            "duration": 358,
                            "bitRate": 238,
                            "bitDepth": 16,
                            "samplingRate": 44100,
                            "channelCount": 2,
                            "track": 2,
                            "year": 2005,
                            "genre": "Hip-Hop",
                            "size": 10715592,
                            "discNumber": 1,
                            "suffix": "mp3",
                            "contentType": "audio/mpeg",
                            "path": "user/Comfort Fit/Forget And Remember/2 - Planetary Picknick.mp3"
                        }
                    ]
                },
                "externalDocs": {
                    "description": "Share",
                    "url": "https://opensubsonic.netlify.app/docs/responses/share/"
                }
            },
            "Shares": {
                "type": "object",
                "description": "Shares.",
                "properties": {
                    "share": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Share"
                        },
                        "description": "A list of share"
                    }
                },
                "example": {
                    "share": [
                        {
                            "id": "12",
                            "url": "http://localhost:8989/share.php?id=12&secret=fXlKyEv3",
                            "description": "Forget and Remember (Comfort Fit)",
                            "username": "user",
                            "created": "2023-03-16T04:13:09+00:00",
                            "visitCount": 0,
                            "entry": [
                                {
                                    "id": "300000116",
                                    "parent": "200000021",
                                    "title": "Can I Help U?",
                                    "isDir": false,
                                    "isVideo": false,
                                    "type": "music",
                                    "albumId": "200000021",
                                    "album": "Forget and Remember",
                                    "artistId": "100000036",
                                    "artist": "Comfort Fit",
                                    "coverArt": "300000116",
                                    "duration": 103,
                                    "bitRate": 216,
                                    "bitDepth": 16,
                                    "samplingRate": 44100,
                                    "channelCount": 2,
                                    "track": 1,
                                    "year": 2005,
                                    "genre": "Hip-Hop",
                                    "size": 2811819,
                                    "discNumber": 1,
                                    "suffix": "mp3",
                                    "contentType": "audio/mpeg",
                                    "path": "user/Comfort Fit/Forget And Remember/1 - Can I Help U?.mp3"
                                },
                                {
                                    "id": "300000121",
                                    "parent": "200000021",
                                    "title": "Planetary Picknick",
                                    "isDir": false,
                                    "isVideo": false,
                                    "type": "music",
                                    "albumId": "200000021",
                                    "album": "Forget and Remember",
                                    "artistId": "100000036",
                                    "artist": "Comfort Fit",
                                    "coverArt": "300000121",
                                    "duration": 358,
                                    "bitRate": 238,
                                    "bitDepth": 16,
                                    "samplingRate": 44100,
                                    "channelCount": 2,
                                    "track": 2,
                                    "year": 2005,
                                    "genre": "Hip-Hop",
                                    "size": 10715592,
                                    "discNumber": 1,
                                    "suffix": "mp3",
                                    "contentType": "audio/mpeg",
                                    "path": "user/Comfort Fit/Forget And Remember/2 - Planetary Picknick.mp3"
                                }
                            ]
                        }
                    ]
                },
                "externalDocs": {
                    "description": "Shares",
                    "url": "https://opensubsonic.netlify.app/docs/responses/shares/"
                }
            },
            "SharesSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SubsonicSuccessResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "shares": {
                                "$ref": "#/components/schemas/Shares"
                            }
                        },
                        "required": [
                            "shares"
                        ],
                        "description": "A subsonic-response element with a nested shares element on success. Which in turns contains a single share element for the newly created share"
                    }
                ]
            },
            "SharesResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SharesSuccessResponse"
                    },
                    {
                        "$ref": "#/components/schemas/SubsonicFailureResponse"
                    }
                ]
            }
        }
    }
}